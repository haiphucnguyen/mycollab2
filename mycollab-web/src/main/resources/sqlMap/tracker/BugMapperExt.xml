<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esofthead.mycollab.module.tracker.dao.BugMapperExt" >
    <resultMap
        id="SimpleBugResult"
        extends="com.esofthead.mycollab.module.tracker.dao.BugMapper.BaseResultMap"
        type="com.esofthead.mycollab.module.tracker.domain.SimpleBug" >

        <result
            column="loguserFullName"
            jdbcType="VARCHAR"
            property="loguserFullName" />

        <result
            column="assignuserFullName"
            jdbcType="VARCHAR"
            property="assignuserFullName" />

        <result
            column="projectname"
            jdbcType="VARCHAR"
            property="projectname" />

        <collection
            columnPrefix="affectedversion_"
            ofType="com.esofthead.mycollab.module.tracker.domain.Version"
            property="affectedVersions"
            resultMap="com.esofthead.mycollab.module.tracker.dao.VersionMapper.BaseResultMap" />

        <collection
            columnPrefix="fixedversion_"
            ofType="com.esofthead.mycollab.module.tracker.domain.Version"
            property="fixedVersions"
            resultMap="com.esofthead.mycollab.module.tracker.dao.VersionMapper.BaseResultMap" />

        <collection
            columnPrefix="component_"
            ofType="com.esofthead.mycollab.module.tracker.domain.Component"
            property="components"
            resultMap="com.esofthead.mycollab.module.tracker.dao.ComponentMapper.BaseResultMap" />
    </resultMap>

    <sql id="querySearchCriteria" >

        <choose>

            <when test="assignuser == &apos;&apos;" >
				AND m_tracker_bug.assignuser IS NULL


            </when>

            <when test="assignuser != null" >
				AND m_tracker_bug.assignuser=#{assignuser.value}


            </when>
        </choose>

        <if test="summary != null" >
<![CDATA[${summary.operation} m_tracker_bug.summary LIKE '%${summary.value}%']]></if>

        <if test="detail != null" >
<![CDATA[${detail.operation} m_tracker_bug.detail LIKE '%${detail.value}%']]></if>

        <if test="environment != null" >
<![CDATA[${environment.operation} m_tracker_bug.environment LIKE '%${environment.value}%']]></if>

        <if test="loguser != null" >
<![CDATA[${loguser.operation} m_tracker_bug.logby = #{loguser.value}]]></if>

        <if test="postedDateFrom != null" >
<![CDATA[${postedDateFrom.operation} m_tracker_bug.createdTime >= #{postedDateFrom.value,javaType=DATE}]]></if>

        <if test="postedDateTo != null" >
<![CDATA[${postedDateTo.operation} m_tracker_bug.createdTime <= #{postedDateTo.value,javaType=DATE}]]></if>

        <if test="updatedDateFrom != null" >
<![CDATA[${updatedDateFrom.operation} m_tracker_bug.lastUpdatedTime >= #{updatedDateFrom,javaType=DATE}]]></if>

        <if test="updatedDateTo != null" >
<![CDATA[${updatedDateTo.operation} m_tracker_bug.lastUpdatedTime <= #{updatedDateTo.value,javaType=DATE}]]></if>

        <if test="dueDateFrom != null" >
<![CDATA[${dueDateFrom.operation} m_tracker_bug.duedate >= #{dueDateFrom.value,javaType=DATE}]]></if>

        <if test="dueDateTo != null" >
<![CDATA[${dueDateTo.operation} m_tracker_bug.duedate <= #{dueDateTo.value,javaType=DATE}]]></if>

        <if test="resolvedDateFrom != null" >
<![CDATA[${resolvedDateFrom.operation} m_tracker_bug.resolveddate >= #{resolvedDateFrom.value,javaType=DATE}]]></if>

        <if test="resolvedDateTo != null" >
<![CDATA[${resolvedDateTo.operation} m_tracker_bug.resolveddate <= #{resolvedDateTo.value,javaType=DATE}]]></if>

        <if test="projectId != null" >
			<![CDATA[${projectId.operation} m_tracker_bug.projectid=#{projectId.value,javaType=INTEGER}]]>

        </if>

        <if test="affectedversionids != null" >
			${affectedversionids.operation}



            <foreach
                close=")"
                collection="affectedversionids.values"
                item="affectedversion"
                open="("
                separator="OR" >

<![CDATA[
            (SELECT COUNT(*)
                FROM m_tracker_bug_related_item
                WHERE m_tracker_bug_related_item.type='AffVersion'
                    AND m_tracker_bug_related_item.typeid=#{affectedversion,javaType=INTEGER}
                    AND m_tracker_bug_related_item.bugid=m_tracker_bug.id)> 0
                    ]]>
            </foreach>
        </if>

        <if test="fixedversionids != null" >
			${fixedversionids.operation}



            <foreach
                close=")"
                collection="fixedversionids.values"
                item="fixedversion"
                open="("
                separator="OR" >

<![CDATA[
                (SELECT COUNT(*) 
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='FixVersion'
                        AND m_tracker_bug_related_item.typeid=#{fixedversion,javaType=INTEGER}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id)> 0
                ]]>
            </foreach>
        </if>

        <if test="versionids != null" >
			${versionids.operation}



            <foreach
                close=")"
                collection="versionids.values"
                item="versionid"
                open="("
                separator="OR" >

<![CDATA[
                ((SELECT COUNT(*)
                FROM m_tracker_bug_related_item
                WHERE m_tracker_bug_related_item.type='AffVersion'
                    AND m_tracker_bug_related_item.typeid=#{affectedversion,javaType=INTEGER}
                    AND m_tracker_bug_related_item.bugid=m_tracker_bug.id)> 0)
                  OR 
                  ((SELECT COUNT(*) 
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='FixVersion'
                        AND m_tracker_bug_related_item.typeid=#{fixedversion,javaType=INTEGER}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id)> 0)
                ]]>
            </foreach>
        </if>

        <if test="componentids != null" >
			${componentids.operation}



            <foreach
                close=")"
                collection="componentids.values"
                item="componentid"
                open="("
                separator="OR" >

<![CDATA[
                (SELECT COUNT(*)
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='Component'
                        AND m_tracker_bug_related_item.typeid=#{componentid,javaType=INTEGER}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id)> 0
                ]]>
            </foreach>
        </if>

        <if test="priorities != null" >
			${priorities.operation} m_tracker_bug.priority IN



            <foreach
                close=")"
                collection="priorities.values"
                item="priorityitem"
                open="("
                separator="," >
				#{priorityitem}


            </foreach>
        </if>

        <if test="statuses != null" >
			${statuses.operation} m_tracker_bug.status IN



            <foreach
                close=")"
                collection="statuses.values"
                item="statusitem"
                open="("
                separator="," >
				#{statusitem}


            </foreach>
        </if>

        <if test="resolutions != null" >
			${resolutions.operation} m_tracker_bug.resolution IN



            <foreach
                close=")"
                collection="resolutions.values"
                item="resolutionitem"
                open="("
                separator="," >
				#{resolutionitem}


            </foreach>
        </if>

        <if test="severities != null" >
			${severities.operation} m_tracker_bug.severity IN



            <foreach
                close=")"
                collection="severities.values"
                item="severityitem"
                open="("
                separator="," >
				#{severityitem}


            </foreach>
        </if>
    </sql>

    <sql id="selectBug" >

<![CDATA[
          SELECT m_tracker_bug.id, m_tracker_bug.summary, m_tracker_bug.detail, m_tracker_bug.assignuser, m_tracker_bug.createdTime, 
                 m_tracker_bug.logby, m_tracker_bug.severity, m_tracker_bug.priority, m_tracker_bug.lastUpdatedTime,
                 m_tracker_bug.status, m_tracker_bug.duedate, m_tracker_bug.environment, m_tracker_bug.resolution,
                 m_tracker_bug.cus_int_01, m_tracker_bug.cus_int_02, m_tracker_bug.cus_int_03, m_tracker_bug.cus_int_04, 
                 m_tracker_bug.cus_int_05, m_tracker_bug.cus_int_06, m_tracker_bug.cus_int_07,
                 m_tracker_bug.cus_int_08, m_tracker_bug.cus_int_09, m_tracker_bug.cus_int_10, m_tracker_bug.cus_str_01, 
                 m_tracker_bug.cus_str_02, m_tracker_bug.cus_str_03, m_tracker_bug.cus_str_04,
                 m_tracker_bug.cus_str_05, m_tracker_bug.cus_time_01, m_tracker_bug.cus_time_02, 
                 m_tracker_bug.cus_time_03, m_tracker_bug.cus_time_04, m_tracker_bug.cus_dbl_01, 
                 m_tracker_bug.cus_dbl_02, m_tracker_bug.cus_dbl_03, m_tracker_bug.projectid, 
                 m_tracker_bug.resolveddate, 
                 concat(assignuserTbl.firstname, IFNULL(concat(' ', assignuserTbl.middlename, ' '), ' '), assignuserTbl.lastname) as assignuserFullName,
                 concat(loguserTbl.firstname, IFNULL(concat(' ', loguserTbl.middlename, ' '), ' '), loguserTbl.lastname) as loguserFullName,
                 m_prj_project.name as projectname, affectedversion.id as affectedversion_id, affectedversion.projectid as affectedversion_projectid, 
                 affectedversion.description as affectedversion_description, affectedversion.duedate as affectedversion_duedate, 
                 affectedversion.versionname as affectedversion_versionname, affectedversion.createdUser as affectedversion_createdUser, 
                 affectedversion.createdDate as affectedversion_createdDate,
                 fixedversion.versionname as fixedversion_versionname, fixedversion.createdUser as fixedversion_createdUser, 
                 fixedversion.createdDate as fixedversion_createdDate,
                 component.id as component_id, component.projectid as component_projectid, component.componentname as componentname, component.userlead as component_userlead, 
                 component.description as component_description, component.createdUser as component_createdUser, component.createdDate as component_createdDate,
                 m_tracker_bug.description, m_tracker_bug.estimateTime, m_tracker_bug.estimateRemainTime
           FROM m_tracker_bug
               LEFT OUTER JOIN m_prj_project ON (m_tracker_bug.projectid = m_prj_project.id)
               LEFT OUTER JOIN s_user AS assignuserTbl ON (m_tracker_bug.assignuser=assignuserTbl.username)
               LEFT OUTER JOIN s_user AS loguserTbl ON (m_tracker_bug.logby=loguserTbl.username)
               LEFT OUTER JOIN m_tracker_bug_related_item AS relatedItem1 ON (relatedItem1.bugid = m_tracker_bug.id AND relatedItem1.type='AffVersion')
               LEFT OUTER JOIN m_tracker_version AS affectedversion ON (affectedversion.id = relatedItem1.typeid)
               LEFT OUTER JOIN m_tracker_bug_related_item AS relatedItem2 ON (relatedItem2.bugid = m_tracker_bug.id AND relatedItem2.type='FixVersion')
               LEFT OUTER JOIN m_tracker_version AS fixedversion ON (fixedversion.id = relatedItem2.typeid)
               LEFT OUTER JOIN m_tracker_bug_related_item AS relatedItem3 ON (relatedItem3.bugid = m_tracker_bug.id AND relatedItem3.type='Component')
               LEFT OUTER JOIN m_tracker_component AS component ON (component.id = relatedItem3.typeid)
               
        ]]>
    </sql>

    <select
        id="getBugById"
        resultMap="SimpleBugResult"
        resultType="int" >

        <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.selectBug" />
        WHERE m_tracker_bug.id = #{bugid,javaType=INTEGER}


    </select>

    <select
        id="getTotalCount"
        parameterType="BugSearchCriteria"
        resultType="int" >
		SELECT count(*) as totalCount FROM m_tracker_bug



        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
    </select>

    <select
        id="findPagableListByCriteria"
        parameterType="BugSearchCriteria"
        resultMap="SimpleBugResult" >

        <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.selectBug" />

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		ORDER BY m_tracker_bug.lastUpdatedTime DESC


    </select>

    <select
        id="getStatusSummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >
		SELECT m_tracker_bug.status AS groupid, COUNT(m_tracker_bug.status) AS
		value, '' as groupname
		FROM m_tracker_bug



        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_bug.status


    </select>

    <select
        id="getPrioritySummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >

<![CDATA[
        SELECT m_tracker_bug.priority AS groupid,
            COUNT(m_tracker_bug.priority) AS value, '' as groupname
        FROM m_tracker_bug
        ]]>

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_bug.priority


    </select>

    <select
        id="getResolutionDefectsSummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >

<![CDATA[
        SELECT m_tracker_bug.resolution AS groupid,
            COUNT(m_tracker_bug.resolution) AS value, '' as groupname
        FROM
            m_tracker_bug
        ]]>

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_bug.resolution


    </select>

    <select
        id="getAssignedDefectsSummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >

<![CDATA[
        SELECT m_tracker_bug.assignuser AS groupid,
            COUNT(IFNULL(m_tracker_bug.assignuser,'')) AS value,
            concat(s_user.firstname, IFNULL(concat(' ', s_user.middlename, ' '), ' '), s_user.lastname) as groupname
        FROM m_tracker_bug
            LEFT OUTER JOIN s_user ON (m_tracker_bug.assignuser = s_user.username)
        ]]>

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_bug.assignuser


    </select>

    <select
        id="getReporterDefectsSummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >

<![CDATA[
        SELECT m_tracker_bug.logby AS groupid,
            COUNT(IFNULL(m_tracker_bug.logby,'')) AS value,
            concat(s_user.firstname, IFNULL(concat(' ', s_user.middlename, ' '), ' '), s_user.lastname) as groupname
        FROM m_tracker_bug
            LEFT OUTER JOIN s_user ON (m_tracker_bug.logby = s_user.username)
        ]]>

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_bug.logby


    </select>

    <select
        id="getComponentDefectsSummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >

<![CDATA[
        SELECT m_tracker_component.id AS groupid,
            COUNT(IFNULL(m_tracker_component.id,'')) AS value,
            m_tracker_component.componentname as groupname
        FROM m_tracker_bug
        RIGHT OUTER JOIN m_tracker_bug_related_item ON (m_tracker_bug.id = m_tracker_bug_related_item.bugid) 
        RIGHT OUTER JOIN m_tracker_component ON ((m_tracker_bug_related_item.type = 'Component')
                AND m_tracker_component.id = m_tracker_bug_related_item.typeid)
        ]]>

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >

            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_component.id

		UNION



<![CDATA[
        SELECT 0 as groupid, COUNT(m_tracker_bug.id) as value, '' as groupname
            FROM m_tracker_bug
            WHERE (SELECT COUNT(*) FROM m_tracker_bug_related_item WHERE m_tracker_bug_related_item.type='Component' 
                AND m_tracker_bug.id=m_tracker_bug_related_item.typeid) = 0
        ]]>

        <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
    </select>

    <select
        id="getVersionDefectsSummary"
        parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" >

<![CDATA[
        SELECT m_tracker_version.id AS groupid,
            COUNT(IFNULL(m_tracker_version.id,'')) AS value,
            m_tracker_version.versionname as groupname
        FROM m_tracker_bug
        RIGHT OUTER JOIN m_tracker_related_item ON (CONCAT('bug-', m_tracker_bug.id) = m_tracker_related_item.refkey) 
        RIGHT OUTER JOIN m_tracker_version ON ((m_tracker_related_item.type = 0 || m_tracker_related_item.type =1)
                AND m_tracker_version.id = m_tracker_related_item.typeid)
        ]]>

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
			1=1 


            <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
        </trim>
		GROUP BY m_tracker_version.id

		UNION



<![CDATA[       
        SELECT 0 as groupid, COUNT(m_tracker_bug.id) as value, '' as groupname
            FROM m_tracker_bug
            WHERE (SELECT COUNT(*) FROM m_tracker_related_item WHERE (m_tracker_related_item.type=0 OR m_tracker_related_item.type=1) AND CONCAT('bug-', m_tracker_bug.id) = m_tracker_related_item.refkey) = 0
        ]]>

        <include refid="com.esofthead.mycollab.module.tracker.dao.BugMapperExt.querySearchCriteria" />
    </select>

</mapper>