<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.esofthead.mycollab.module.project.dao.ProjectGenericTaskMapper">
    <resultMap id="BaseResultMap"
        type="com.esofthead.mycollab.module.project.domain.ProjectGenericTask">
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="assignUser" jdbcType="VARCHAR" property="assignUser" />
        <result column="assignUserFullName" jdbcType="VARCHAR"
            property="assignUserFullName" />
        <result column="dueDate" jdbcType="TIMESTAMP" property="dueDate" />
        <result column="projectId" jdbcType="INTEGER" property="projectId" />
        <result column="projectName" jdbcType="VARCHAR" property="projectName" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="typeId" jdbcType="INTEGER" property="typeId" />
        <result column="lastUpdatedTime" jdbcType="TIMESTAMP"
            property="lastUpdatedTime" />
    </resultMap>

    <resultMap id="BaseResultTaskCountMap"
        type="com.esofthead.mycollab.module.project.domain.ProjectGenericTaskCount">
        <result column="assignUser" jdbcType="VARCHAR" property="assignUser" />
        <result column="assignUserFullName" jdbcType="VARCHAR"
            property="assignUserFullName" />
        <result column="projectId" jdbcType="INTEGER" property="projectId" />
        <result column="projectName" jdbcType="VARCHAR" property="projectName" />
        <result column="taskCount" jdbcType="INTEGER" property="taskCount" />
    </resultMap>

    <sql id="queryProblemSearchCriteria">

        <if test='sAccountId != null'>
            ${sAccountId.operation} m_prj_problem.sAccountId =
            #{sAccountId.value,javaType=INTEGER}
        </if>
        <if test='projectId != null'>
            ${projectId.operation} m_prj_problem.projectid =
            #{projectId.value,javaType=INTEGER}
        </if>
        <if test='assignUser != null'>
            ${assignUser.operation} m_prj_problem.assigntouser =
            #{assignUser.value}
        </if>
        <if test='isOpenned != null'>
            ${isOpenned.operation} m_prj_problem.status='Open'
        </if>
    </sql>

    <sql id="queryRiskSearchCriteria">

        <if test='sAccountId != null'>
            ${sAccountId.operation} m_prj_risk.sAccountId =
            #{sAccountId.value,javaType=INTEGER}
        </if>
        <if test='projectId != null'>
            ${projectId.operation} m_prj_risk.projectid =
            #{projectId.value,javaType=INTEGER}
        </if>
        <if test='assignUser != null'>
            ${assignUser.operation} m_prj_risk.assigntouser =
            #{assignUser.value}
        </if>
        <if test='isOpenned != null'>
            ${isOpenned.operation} m_prj_risk.status='Open'
        </if>
    </sql>

    <sql id="queryBugSearchCriteria">
        <if test='sAccountId != null'>
            ${sAccountId.operation} m_tracker_bug.sAccountId =
            #{sAccountId.value,javaType=INTEGER}
        </if>
        <if test='projectId != null'>
            ${projectId.operation} m_tracker_bug.projectid =
            #{projectId.value,javaType=INTEGER}
        </if>
        <if test='assignUser != null'>
            ${assignUser.operation} m_tracker_bug.assignuser =
            #{assignUser.value}
        </if>
        <if test='isOpenned != null'>
            ${isOpenned.operation} (m_tracker_bug.status='Open'
            OR m_tracker_bug.status='In Progress' OR
            m_tracker_bug.status='Reopenned' OR
            m_tracker_bug.status='Test Pending')
        </if>
    </sql>

    <sql id="queryTaskSearchCriteria">
        <if test='sAccountId != null'>
            ${sAccountId.operation} m_prj_task.sAccountId =
            #{sAccountId.value,javaType=INTEGER}
        </if>
        <if test='projectId != null'>
            ${projectId.operation} m_prj_task.projectid =
            #{projectId.value,javaType=INTEGER}
        </if>
        <if test='assignUser != null'>
            ${assignUser.operation} m_prj_task.assignUser =
            #{assignUser.value}
        </if>
        <if test='isOpenned != null'>
            ${isOpenned.operation} m_prj_task.status='Open'
        </if>
    </sql>

    <sql id="selectGenericTaskFromRisk">

    <![CDATA[
          SELECT m_prj_risk.riskname AS name, m_prj_risk.assigntouser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_risk.datedue AS dueDate, m_prj_risk.projectid AS projectId, m_prj_project.name AS projectName, 
            'Risk' AS type, m_prj_risk.id AS typeid, m_prj_risk.lastUpdatedTime AS lastUpdatedTime
                 
          FROM m_prj_risk
              LEFT OUTER JOIN s_user ON (m_prj_risk.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_risk.projectid=m_prj_project.id)
        ]]>
    </sql>

    <sql id="selectGenericTaskFromProblem">

    <![CDATA[
          SELECT m_prj_problem.issuename as name, m_prj_problem.assigntouser as assignUser, 
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_problem.datedue as dueDate, m_prj_problem.projectid as projectId, m_prj_project.name AS projectName,
            'Problem' AS type, m_prj_problem.id AS typeId, m_prj_problem.lastUpdatedTime AS lastUpdatedTime
                 
          FROM m_prj_problem
              LEFT OUTER JOIN s_user ON (m_prj_problem.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_problem.projectid=m_prj_project.id)
        ]]>
    </sql>

    <sql id="selectGenericTaskFromBug">

    <![CDATA[
          SELECT m_tracker_bug.summary AS name, m_tracker_bug.assignuser AS assignUser,
                concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
                m_tracker_bug.duedate AS dueDate, m_tracker_bug.projectid AS projectId, m_prj_project.name AS projectName,
                'Bug' AS type, m_tracker_bug.id AS typeId, m_tracker_bug.lastUpdatedTime AS lastUpdatedTime
                 
          FROM m_tracker_bug
              LEFT OUTER JOIN s_user ON (m_tracker_bug.assignuser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_tracker_bug.projectid=m_prj_project.id)
        ]]>
    </sql>

    <sql id="selectGenericTaskFromTask">

        <![CDATA[
          SELECT m_prj_task.taskname AS name, m_prj_task.assignUser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_task.deadline AS dueDate, m_prj_task.projectid AS projectId, m_prj_project.name AS projectName,
            'Task' AS type, m_prj_task.id AS typeid, m_prj_task.lastUpdatedTime AS lastUpdatedTime
          
          FROM m_prj_task
            LEFT OUTER JOIN s_user ON (m_prj_task.assignUser=s_user.username)
            LEFT OUTER JOIN m_prj_project ON (m_prj_task.projectid=m_prj_project.id)
        ]]>
    </sql>

    <select id="getTotalCountFromProblem" parameterType="ProjectGenericTaskSearchCriteria"
        resultType="int">
        SELECT count(*) as totalCount FROM m_prj_problem


        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include refid="queryProblemSearchCriteria" />
        </trim>
    </select>

    <select id="getTotalCountFromRisk" parameterType="ProjectGenericTaskSearchCriteria"
        resultType="int">
        SELECT count(*) as totalCount FROM m_prj_risk


        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include refid="queryRiskSearchCriteria" />
        </trim>
    </select>

    <select id="getTotalCountFromBug" parameterType="ProjectGenericTaskSearchCriteria"
        resultType="int">
        SELECT count(*) as totalCount FROM m_tracker_bug


        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include refid="queryBugSearchCriteria" />
        </trim>
    </select>

    <select id="getTotalCountFromTask" parameterType="ProjectGenericTaskSearchCriteria"
        resultType="int">
        SELECT count(*) as totalCount FROM m_prj_task


        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include refid="queryTaskSearchCriteria" />
        </trim>
    </select>

    <sql id="orderStatement">
        ORDER BY
        <if test="orderByField != null">${orderByField} ${sortDirection}, </if>
        <![CDATA[
            projectName ASC
        ]]>
    </sql>

    <select id="findPagableListByCriteria" parameterType="ProjectGenericTaskSearchCriteria"
        resultMap="BaseResultMap">

        (
        <include refid="selectGenericTaskFromProblem" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryProblemSearchCriteria" />
        </trim>
        )

        UNION

        (
        <include refid="selectGenericTaskFromRisk" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryRiskSearchCriteria" />
        </trim>
        )

        UNION

        (
        <include refid="selectGenericTaskFromBug" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryBugSearchCriteria" />
        </trim>
        )

        UNION

        (
        <include refid="selectGenericTaskFromTask" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryTaskSearchCriteria" />
        </trim>
        )

        <include refid="orderStatement" />
    </select>

    <sql id="selectGenericTaskCountFromTask">

        <![CDATA[
          SELECT m_prj_task.assignUser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_task.projectid AS projectId, m_prj_project.name AS projectName
          
          FROM m_prj_task
            LEFT OUTER JOIN s_user ON (m_prj_task.assignUser=s_user.username)
            LEFT OUTER JOIN m_prj_project ON (m_prj_task.projectid=m_prj_project.id)
        ]]>
    </sql>

    <sql id="selectGenericTaskCountFromBug">

    <![CDATA[
          SELECT m_tracker_bug.assignuser AS assignUser,
                concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
                m_tracker_bug.projectid AS projectId, m_prj_project.name AS projectName
                 
          FROM m_tracker_bug
              LEFT OUTER JOIN s_user ON (m_tracker_bug.assignuser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_tracker_bug.projectid=m_prj_project.id)
        ]]>
    </sql>

    <sql id="selectGenericTaskCountFromRisk">

    <![CDATA[
          SELECT m_prj_risk.assigntouser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_risk.projectid AS projectId, m_prj_project.name AS projectName
                 
          FROM m_prj_risk
              LEFT OUTER JOIN s_user ON (m_prj_risk.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_risk.projectid=m_prj_project.id)
        ]]>
    </sql>

    <sql id="selectGenericTaskCountFromProblem">

    <![CDATA[
          SELECT m_prj_problem.assigntouser as assignUser, 
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_problem.projectid as projectId, m_prj_project.name AS projectName
                 
          FROM m_prj_problem
              LEFT OUTER JOIN s_user ON (m_prj_problem.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_problem.projectid=m_prj_project.id)
        ]]>
    </sql>

    <select id="findPagableTaskCountListByCriteria"
        parameterType="ProjectGenericTaskSearchCriteria" resultMap="BaseResultTaskCountMap">

        SELECT COUNT(*) AS taskCount, agreeT.projectId, agreeT.projectName, agreeT.assignUser, agreeT.assignUserFullName
        FROM
        (
        (
        <include refid="selectGenericTaskCountFromProblem" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryProblemSearchCriteria" />
        </trim>
        )

        UNION ALL

        (
        <include refid="selectGenericTaskCountFromRisk" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryRiskSearchCriteria" />
        </trim>
        )

        UNION ALL

        (
        <include refid="selectGenericTaskCountFromBug" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryBugSearchCriteria" />
        </trim>
        )

        UNION ALL

        (
        <include refid="selectGenericTaskCountFromTask" />
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1
            <include refid="queryTaskSearchCriteria" />
        </trim>
        )
        ) AS agreeT

        GROUP BY agreeT.projectId
    </select>
</mapper>