<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esofthead.mycollab.module.project.dao.ProblemMapperExt">
	<resultMap extends="com.esofthead.mycollab.module.project.dao.ProblemMapper.BaseResultMap"
		id="ProblemResult" type="com.esofthead.mycollab.module.project.domain.SimpleProblem">
		<result column="problemsource" property="problemsource"
			jdbcType="VARCHAR" />
		<result column="raisedByUserFullName" jdbcType="VARCHAR"
			property="raisedByUserFullName" />
		<result column="assignedUserFullName" jdbcType="VARCHAR"
			property="assignedUserFullName" />
	</resultMap>

	<sql id="querySearchCriteria">
		<if test="problemname != null">
			${problemname.operation} m_prj_problem.issuename LIKE
			'%${problemname.value}%'
        </if>
		<if test="projectId != null">
			${projectId.operation} m_prj_problem.projectid =
			#{projectId.value,javaType=INTEGER}
        </if>
		<if test="raisedByUser != null">
			${raisedByUser.operation} m_prj_problem.raisedbyuser =
			#{raisedByUser.value}
        </if>
		<if test="assignToUser != null">
			${assignToUser.operation} m_prj_problem.assigntouser =
			#{assignToUser.value}
        </if>
		<if test="isCompleted != null">
			${isCompleted.operation} m_prj_problem.status IS
			${isCompleted.value}
        </if>
	</sql>

	<sql id="selectProblem">
        <![CDATA[
          SELECT m_prj_problem.id, m_prj_problem.issuename, m_prj_problem.description, m_prj_problem.projectid, 
                 m_prj_problem.raisedbyuser, m_prj_problem.assigntouser, m_prj_problem.impact,
                 m_prj_problem.priority, m_prj_problem.status, m_prj_problem.dateraised, m_prj_problem.datedue, 
                 m_prj_problem.actualstartdate, m_prj_problem.actualenddate, 
                 m_prj_problem.level, m_prj_problem.resolution, m_prj_problem.source, m_prj_problem.state,
                 concat(raisedUser.firstname, IFNULL(concat(' ', raisedUser.middlename, ' '), ' '), raisedUser.lastname) AS raisedByUserFullName,
                 concat(assignedUser.firstname, IFNULL(concat(' ', assignedUser.middlename, ' '), ' '), assignedUser.lastname) AS assignedUserFullName 
                 
          FROM m_prj_problem
              LEFT OUTER JOIN s_user as raisedUser ON (m_prj_problem.raisedbyuser=raisedUser.username)
              LEFT OUTER JOIN s_user as assignedUser ON (m_prj_problem.assigntouser=assignedUser.username)
        ]]>
	</sql>

	<select id="getTotalCount" resultType="int" parameterType="ProblemSearchCriteria">
		SELECT count(*) as totalCount FROM m_prj_problem
		<trim prefix="WHERE" prefixOverrides="AND | OR ">
			<include
				refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.querySearchCriteria" />
		</trim>
	</select>

	<select id="findPagableList" resultMap="ProblemResult"
		parameterType="ProblemSearchCriteria">
		<include
			refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.selectProblem" />

		<trim prefix="WHERE" prefixOverrides="AND | OR ">
			<include
				refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.querySearchCriteria" />
		</trim>
	</select>

	<insert id="insert" parameterType="com.esofthead.mycollab.module.project.domain.Problem"
		useGeneratedKeys="true" keyProperty="id">
       <![CDATA[
        insert into m_prj_problem (id, issuename, description, 
            projectid, raisedbyuser, assigntouser, 
            impact, priority, status, 
            dateraised, datedue, actualstartdate, 
            actualenddate, level, resolution, 
            source, state)
        values (#{id,jdbcType=INTEGER}, #{issuename,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
            #{projectid,jdbcType=INTEGER}, #{raisedbyuser,jdbcType=VARCHAR}, #{assigntouser,jdbcType=VARCHAR}, 
            #{impact,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
            #{dateraised,jdbcType=TIMESTAMP}, #{datedue,jdbcType=TIMESTAMP}, #{actualstartdate,jdbcType=TIMESTAMP}, 
            #{actualenddate,jdbcType=TIMESTAMP}, #{level,jdbcType=INTEGER}, #{resolution,jdbcType=VARCHAR}, 
            #{source,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
        ]]>
	</insert>
</mapper>