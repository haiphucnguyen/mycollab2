<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esofthead.mycollab.module.project.dao.ProblemMapperExt" >

    <resultMap
        id="ProblemResult"
        extends="com.esofthead.mycollab.module.project.dao.ProblemMapper.ResultMapWithBLOBs"
        type="com.esofthead.mycollab.module.project.domain.SimpleProblem" >

        <result
            column="raisedByUserFullName"
            jdbcType="VARCHAR"
            property="raisedByUserFullName" />

        <result
            column="assignedUserFullName"
            jdbcType="VARCHAR"
            property="assignedUserFullName" />
    </resultMap>

    <sql id="querySearchCriteria" >
    
    	<if test="id != null">
            <![CDATA[${id.operation} m_prj_problem.id ${id.compareOperator} #{id.value,javaType=INTEGER}]]>
        </if>

        <if test="problemname != null" >
            ${problemname.operation} m_prj_problem.issuename LIKE
            '%${problemname.value}%'

        </if>

        <if test="projectId != null" >
            ${projectId.operation} m_prj_problem.projectid =
            #{projectId.value,javaType=INTEGER}

        </if>

        <if test="raisedByUser != null" >
            ${raisedByUser.operation} m_prj_problem.raisedbyuser =
            #{raisedByUser.value}

        </if>

        <if test="assignToUser != null" >
            ${assignToUser.operation} m_prj_problem.assigntouser =
            #{assignToUser.value}

        </if>
    </sql>

    <sql id="selectProblem" >

<![CDATA[
          SELECT m_prj_problem.id, m_prj_problem.issuename, m_prj_problem.description, m_prj_problem.projectid, 
                 m_prj_problem.raisedbyuser, m_prj_problem.assigntouser, m_prj_problem.impact,
                 m_prj_problem.priority, m_prj_problem.status, m_prj_problem.dateraised, m_prj_problem.datedue, 
                 m_prj_problem.actualstartdate, m_prj_problem.actualenddate, 
                 m_prj_problem.createdTime, m_prj_problem.lastUpdatedTime, m_prj_problem.type, m_prj_problem.typeid,
                 m_prj_problem.level, m_prj_problem.resolution, m_prj_problem.problemsource, m_prj_problem.state,
                 concat(raisedUser.firstname, ' ', LTRIM(IFNULL(raisedUser.middlename || ' ', '')), raisedUser.lastname) AS raisedByUserFullName,
                 concat(assignedUser.firstname, ' ', LTRIM(IFNULL(assignedUser.middlename || ' ', '')), assignedUser.lastname) AS assignedUserFullName 
                 
          FROM m_prj_problem
              LEFT OUTER JOIN s_user as raisedUser ON (m_prj_problem.raisedbyuser=raisedUser.username)
              LEFT OUTER JOIN s_user as assignedUser ON (m_prj_problem.assigntouser=assignedUser.username)
        ]]>
    </sql>

    <select
        id="getTotalCount"
        parameterType="ProblemSearchCriteria"
        resultType="int" >
        SELECT count(*) as totalCount FROM m_prj_problem


        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
            1=1 

            <include refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.querySearchCriteria" />
        </trim>
    </select>
    
    <sql id="orderStatement">
        ORDER BY 
        <if test="orderByField != null">${orderByField} ${sortDirection}, </if>
        <![CDATA[
            m_prj_problem.lastUpdatedTime DESC
        ]]>
    </sql>

    <select
        id="findPagableListByCriteria"
        parameterType="ProblemSearchCriteria"
        resultMap="ProblemResult" >

        <include refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.selectProblem" />

        <trim
            prefix="WHERE"
            prefixOverrides="AND | OR " >
            1=1 

            <include refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.querySearchCriteria" />
        </trim>
        <include refid="orderStatement"/>
    </select>

    <select
        id="findProblemById"
        parameterType="java.lang.Integer"
        resultMap="ProblemResult" >

        <include refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.selectProblem" />
        WHERE m_prj_problem.id=#{problemId, javaType=INTEGER}

    </select>
    
     <select id="getNextItemKey" parameterType="map" resultType="java.lang.Integer">
        SELECT MIN(id) FROM m_prj_problem

        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1 
            <include 
                refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.querySearchCriteria"/>
        </trim>
    </select>
    
    <select id="getPreviousItemKey" parameterType="map" resultType="java.lang.Integer">
        SELECT MAX(id) FROM m_prj_problem

        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1 
            <include 
                refid="com.esofthead.mycollab.module.project.dao.ProblemMapperExt.querySearchCriteria"/>
        </trim>
    </select>

</mapper>