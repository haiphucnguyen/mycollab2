<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt">
    <resultMap
        extends="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapper.ResultMapWithBLOBs"
        id="TimeLoggingResult"
        type="com.esofthead.mycollab.module.project.domain.SimpleItemTimeLogging">
        <result column="logUserFullName" jdbcType="VARCHAR"
            property="logUserFullName" />
        <result column="summary" jdbcType="VARCHAR" property="summary" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="projectName" jdbcType="VARCHAR" property="projectName" />
        <result column="projectShortName" jdbcType="VARCHAR"
            property="projectShortName" />
        <result column="percentageComplete" jdbcType="DOUBLE"
            property="percentageComplete" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="dueDate" jdbcType="TIMESTAMP" property="dueDate" />
    </resultMap>

    <sql id="querySearchCriteria">

        <if test="projectId != null">
            <![CDATA[${projectId.operation} m_prj_time_logging.projectId ${projectId.compareOperator} #{projectId.value,javaType=INTEGER}]]>
        </if>

        <if test="type != null">
            <![CDATA[${type.operation} m_prj_time_logging.type like '%${type.value}%']]>
        </if>

        <if test="typeId != null">
            <![CDATA[${typeId.operation} m_prj_time_logging.typeid ${typeId.compareOperator} #{typeId.value,javaType=INTEGER}]]>
        </if>

        <if test="rangeDate != null">
            ${rangeDate.operation}
            CAST(m_prj_time_logging.createdTime AS DATE ) BETWEEN
            #{rangeDate.from} AND #{rangeDate.to}
        </if>

        <if test="logUsers != null">
            ${logUsers.operation}
            m_prj_time_logging.loguser IN
            <foreach close=")" collection="logUsers.values"
                item="loguser" open="(" separator=",">
                #{loguser}
            </foreach>
        </if>
    </sql>

    <sql id="selectTask">
        <![CDATA[
          	SELECT m_prj_time_logging.id, m_prj_time_logging.loguser, m_prj_time_logging.projectId, m_prj_time_logging.createdTime, m_prj_time_logging.lastUpdatedTime, 
                 m_prj_time_logging.logValue, m_prj_time_logging.note, m_prj_time_logging.typeid, m_prj_time_logging.type,
                 concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS logUserFullName,
                 m_prj_task.taskname as summary,  m_prj_task.status, m_prj_task.deadline AS dueDate, m_prj_task.percentagecomplete AS percentageComplete
                
            FROM m_prj_time_logging
              LEFT OUTER JOIN s_user ON (m_prj_time_logging.loguser=s_user.username)
              INNER JOIN m_prj_task ON ( m_prj_time_logging.typeid = m_prj_task.id and m_prj_time_logging.type = "Project-Task" )
        
        ]]>
    </sql>

    <sql id="selectBug">
        <![CDATA[
        SELECT m_prj_time_logging.id, m_prj_time_logging.loguser, m_prj_time_logging.projectId, m_prj_time_logging.createdTime, m_prj_time_logging.lastUpdatedTime, 
                 m_prj_time_logging.logValue, m_prj_time_logging.note, m_prj_time_logging.typeid, m_prj_time_logging.type,
                 concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS logUserFullName,
                 m_tracker_bug.summary,  m_tracker_bug.status, m_tracker_bug.duedate AS dueDate, NULL as percentageComplete
            FROM m_prj_time_logging
              LEFT OUTER JOIN s_user ON (m_prj_time_logging.loguser=s_user.username)
              INNER JOIN m_tracker_bug ON ( m_prj_time_logging.typeid = m_tracker_bug.id and m_prj_time_logging.type = "Project-Bug" )
        ]]>
    </sql>

    <select id="getTotalCount" parameterType="ItemTimeLoggingSearchCriteria"
        resultType="int">
        SELECT count(*) as totalCount FROM m_prj_time_logging


        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include
                refid="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt.querySearchCriteria" />
        </trim>
    </select>

    <select id="getTotalHoursByCriteria" parameterType="ItemTimeLoggingSearchCriteria"
        resultType="double">
        SELECT sum(logValue) as totalHour FROM m_prj_time_logging


        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include
                refid="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt.querySearchCriteria" />
        </trim>
    </select>

    <sql id="orderStatement">
        ORDER BY
        <if test="orderByField != null">${orderByField} ${sortDirection}, </if>
        <![CDATA[
            createdTime DESC
        ]]>
    </sql>

    <select id="findPagableListByCriteria" parameterType="ItemTimeLoggingSearchCriteria"
        resultMap="TimeLoggingResult">
        (
        <include
            refid="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt.selectTask" />
 
        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include
                refid="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt.querySearchCriteria" />
        </trim>
        ) UNION (
        
         <include
            refid="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt.selectBug" />

        <trim prefix="WHERE" prefixOverrides="AND | OR ">
            1=1

            <include
                refid="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt.querySearchCriteria" />
        </trim>
        )
        <include refid="orderStatement" />
    </select>
</mapper>
