package com.esofthead.mycollab.module.project.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TaskExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public TaskExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTasknameIsNull() {
            addCriterion("taskname is null");
            return (Criteria) this;
        }

        public Criteria andTasknameIsNotNull() {
            addCriterion("taskname is not null");
            return (Criteria) this;
        }

        public Criteria andTasknameEqualTo(String value) {
            addCriterion("taskname =", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameNotEqualTo(String value) {
            addCriterion("taskname <>", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameGreaterThan(String value) {
            addCriterion("taskname >", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameGreaterThanOrEqualTo(String value) {
            addCriterion("taskname >=", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameLessThan(String value) {
            addCriterion("taskname <", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameLessThanOrEqualTo(String value) {
            addCriterion("taskname <=", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameLike(String value) {
            addCriterion("taskname like", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameNotLike(String value) {
            addCriterion("taskname not like", value, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameIn(List<String> values) {
            addCriterion("taskname in", values, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameNotIn(List<String> values) {
            addCriterion("taskname not in", values, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameBetween(String value1, String value2) {
            addCriterion("taskname between", value1, value2, "taskname");
            return (Criteria) this;
        }

        public Criteria andTasknameNotBetween(String value1, String value2) {
            addCriterion("taskname not between", value1, value2, "taskname");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteIsNull() {
            addCriterion("percentagecomplete is null");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteIsNotNull() {
            addCriterion("percentagecomplete is not null");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteEqualTo(Double value) {
            addCriterion("percentagecomplete =", value, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteNotEqualTo(Double value) {
            addCriterion("percentagecomplete <>", value, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteGreaterThan(Double value) {
            addCriterion("percentagecomplete >", value, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteGreaterThanOrEqualTo(Double value) {
            addCriterion("percentagecomplete >=", value, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteLessThan(Double value) {
            addCriterion("percentagecomplete <", value, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteLessThanOrEqualTo(Double value) {
            addCriterion("percentagecomplete <=", value, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteIn(List<Double> values) {
            addCriterion("percentagecomplete in", values, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteNotIn(List<Double> values) {
            addCriterion("percentagecomplete not in", values, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteBetween(Double value1, Double value2) {
            addCriterion("percentagecomplete between", value1, value2, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andPercentagecompleteNotBetween(Double value1, Double value2) {
            addCriterion("percentagecomplete not between", value1, value2, "percentagecomplete");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNull() {
            addCriterion("startdate is null");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNotNull() {
            addCriterion("startdate is not null");
            return (Criteria) this;
        }

        public Criteria andStartdateEqualTo(Date value) {
            addCriterion("startdate =", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotEqualTo(Date value) {
            addCriterion("startdate <>", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThan(Date value) {
            addCriterion("startdate >", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThanOrEqualTo(Date value) {
            addCriterion("startdate >=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThan(Date value) {
            addCriterion("startdate <", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThanOrEqualTo(Date value) {
            addCriterion("startdate <=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateIn(List<Date> values) {
            addCriterion("startdate in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotIn(List<Date> values) {
            addCriterion("startdate not in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateBetween(Date value1, Date value2) {
            addCriterion("startdate between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotBetween(Date value1, Date value2) {
            addCriterion("startdate not between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andEnddateIsNull() {
            addCriterion("enddate is null");
            return (Criteria) this;
        }

        public Criteria andEnddateIsNotNull() {
            addCriterion("enddate is not null");
            return (Criteria) this;
        }

        public Criteria andEnddateEqualTo(Date value) {
            addCriterion("enddate =", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotEqualTo(Date value) {
            addCriterion("enddate <>", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateGreaterThan(Date value) {
            addCriterion("enddate >", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateGreaterThanOrEqualTo(Date value) {
            addCriterion("enddate >=", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateLessThan(Date value) {
            addCriterion("enddate <", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateLessThanOrEqualTo(Date value) {
            addCriterion("enddate <=", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateIn(List<Date> values) {
            addCriterion("enddate in", values, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotIn(List<Date> values) {
            addCriterion("enddate not in", values, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateBetween(Date value1, Date value2) {
            addCriterion("enddate between", value1, value2, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotBetween(Date value1, Date value2) {
            addCriterion("enddate not between", value1, value2, "enddate");
            return (Criteria) this;
        }

        public Criteria andPriorityIsNull() {
            addCriterion("priority is null");
            return (Criteria) this;
        }

        public Criteria andPriorityIsNotNull() {
            addCriterion("priority is not null");
            return (Criteria) this;
        }

        public Criteria andPriorityEqualTo(Integer value) {
            addCriterion("priority =", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityNotEqualTo(Integer value) {
            addCriterion("priority <>", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityGreaterThan(Integer value) {
            addCriterion("priority >", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityGreaterThanOrEqualTo(Integer value) {
            addCriterion("priority >=", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityLessThan(Integer value) {
            addCriterion("priority <", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityLessThanOrEqualTo(Integer value) {
            addCriterion("priority <=", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityIn(List<Integer> values) {
            addCriterion("priority in", values, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityNotIn(List<Integer> values) {
            addCriterion("priority not in", values, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityBetween(Integer value1, Integer value2) {
            addCriterion("priority between", value1, value2, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityNotBetween(Integer value1, Integer value2) {
            addCriterion("priority not between", value1, value2, "priority");
            return (Criteria) this;
        }

        public Criteria andDurationIsNull() {
            addCriterion("duration is null");
            return (Criteria) this;
        }

        public Criteria andDurationIsNotNull() {
            addCriterion("duration is not null");
            return (Criteria) this;
        }

        public Criteria andDurationEqualTo(Double value) {
            addCriterion("duration =", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotEqualTo(Double value) {
            addCriterion("duration <>", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThan(Double value) {
            addCriterion("duration >", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanOrEqualTo(Double value) {
            addCriterion("duration >=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThan(Double value) {
            addCriterion("duration <", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThanOrEqualTo(Double value) {
            addCriterion("duration <=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationIn(List<Double> values) {
            addCriterion("duration in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotIn(List<Double> values) {
            addCriterion("duration not in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationBetween(Double value1, Double value2) {
            addCriterion("duration between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotBetween(Double value1, Double value2) {
            addCriterion("duration not between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andIsestimatedIsNull() {
            addCriterion("isestimated is null");
            return (Criteria) this;
        }

        public Criteria andIsestimatedIsNotNull() {
            addCriterion("isestimated is not null");
            return (Criteria) this;
        }

        public Criteria andIsestimatedEqualTo(Boolean value) {
            addCriterion("isestimated =", value, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedNotEqualTo(Boolean value) {
            addCriterion("isestimated <>", value, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedGreaterThan(Boolean value) {
            addCriterion("isestimated >", value, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isestimated >=", value, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedLessThan(Boolean value) {
            addCriterion("isestimated <", value, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedLessThanOrEqualTo(Boolean value) {
            addCriterion("isestimated <=", value, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedIn(List<Boolean> values) {
            addCriterion("isestimated in", values, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedNotIn(List<Boolean> values) {
            addCriterion("isestimated not in", values, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedBetween(Boolean value1, Boolean value2) {
            addCriterion("isestimated between", value1, value2, "isestimated");
            return (Criteria) this;
        }

        public Criteria andIsestimatedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isestimated not between", value1, value2, "isestimated");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNull() {
            addCriterion("projectid is null");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNotNull() {
            addCriterion("projectid is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidEqualTo(Integer value) {
            addCriterion("projectid =", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotEqualTo(Integer value) {
            addCriterion("projectid <>", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThan(Integer value) {
            addCriterion("projectid >", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThanOrEqualTo(Integer value) {
            addCriterion("projectid >=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThan(Integer value) {
            addCriterion("projectid <", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThanOrEqualTo(Integer value) {
            addCriterion("projectid <=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidIn(List<Integer> values) {
            addCriterion("projectid in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotIn(List<Integer> values) {
            addCriterion("projectid not in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidBetween(Integer value1, Integer value2) {
            addCriterion("projectid between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotBetween(Integer value1, Integer value2) {
            addCriterion("projectid not between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andDeadlineIsNull() {
            addCriterion("deadline is null");
            return (Criteria) this;
        }

        public Criteria andDeadlineIsNotNull() {
            addCriterion("deadline is not null");
            return (Criteria) this;
        }

        public Criteria andDeadlineEqualTo(Date value) {
            addCriterion("deadline =", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineNotEqualTo(Date value) {
            addCriterion("deadline <>", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineGreaterThan(Date value) {
            addCriterion("deadline >", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineGreaterThanOrEqualTo(Date value) {
            addCriterion("deadline >=", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineLessThan(Date value) {
            addCriterion("deadline <", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineLessThanOrEqualTo(Date value) {
            addCriterion("deadline <=", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineIn(List<Date> values) {
            addCriterion("deadline in", values, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineNotIn(List<Date> values) {
            addCriterion("deadline not in", values, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineBetween(Date value1, Date value2) {
            addCriterion("deadline between", value1, value2, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineNotBetween(Date value1, Date value2) {
            addCriterion("deadline not between", value1, value2, "deadline");
            return (Criteria) this;
        }

        public Criteria andNotesIsNull() {
            addCriterion("notes is null");
            return (Criteria) this;
        }

        public Criteria andNotesIsNotNull() {
            addCriterion("notes is not null");
            return (Criteria) this;
        }

        public Criteria andNotesEqualTo(String value) {
            addCriterion("notes =", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotEqualTo(String value) {
            addCriterion("notes <>", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesGreaterThan(String value) {
            addCriterion("notes >", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesGreaterThanOrEqualTo(String value) {
            addCriterion("notes >=", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesLessThan(String value) {
            addCriterion("notes <", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesLessThanOrEqualTo(String value) {
            addCriterion("notes <=", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesLike(String value) {
            addCriterion("notes like", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotLike(String value) {
            addCriterion("notes not like", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesIn(List<String> values) {
            addCriterion("notes in", values, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotIn(List<String> values) {
            addCriterion("notes not in", values, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesBetween(String value1, String value2) {
            addCriterion("notes between", value1, value2, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotBetween(String value1, String value2) {
            addCriterion("notes not between", value1, value2, "notes");
            return (Criteria) this;
        }

        public Criteria andTaskindexIsNull() {
            addCriterion("taskindex is null");
            return (Criteria) this;
        }

        public Criteria andTaskindexIsNotNull() {
            addCriterion("taskindex is not null");
            return (Criteria) this;
        }

        public Criteria andTaskindexEqualTo(Integer value) {
            addCriterion("taskindex =", value, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexNotEqualTo(Integer value) {
            addCriterion("taskindex <>", value, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexGreaterThan(Integer value) {
            addCriterion("taskindex >", value, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexGreaterThanOrEqualTo(Integer value) {
            addCriterion("taskindex >=", value, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexLessThan(Integer value) {
            addCriterion("taskindex <", value, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexLessThanOrEqualTo(Integer value) {
            addCriterion("taskindex <=", value, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexIn(List<Integer> values) {
            addCriterion("taskindex in", values, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexNotIn(List<Integer> values) {
            addCriterion("taskindex not in", values, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexBetween(Integer value1, Integer value2) {
            addCriterion("taskindex between", value1, value2, "taskindex");
            return (Criteria) this;
        }

        public Criteria andTaskindexNotBetween(Integer value1, Integer value2) {
            addCriterion("taskindex not between", value1, value2, "taskindex");
            return (Criteria) this;
        }

        public Criteria andPredecessorsIsNull() {
            addCriterion("predecessors is null");
            return (Criteria) this;
        }

        public Criteria andPredecessorsIsNotNull() {
            addCriterion("predecessors is not null");
            return (Criteria) this;
        }

        public Criteria andPredecessorsEqualTo(String value) {
            addCriterion("predecessors =", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsNotEqualTo(String value) {
            addCriterion("predecessors <>", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsGreaterThan(String value) {
            addCriterion("predecessors >", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsGreaterThanOrEqualTo(String value) {
            addCriterion("predecessors >=", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsLessThan(String value) {
            addCriterion("predecessors <", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsLessThanOrEqualTo(String value) {
            addCriterion("predecessors <=", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsLike(String value) {
            addCriterion("predecessors like", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsNotLike(String value) {
            addCriterion("predecessors not like", value, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsIn(List<String> values) {
            addCriterion("predecessors in", values, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsNotIn(List<String> values) {
            addCriterion("predecessors not in", values, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsBetween(String value1, String value2) {
            addCriterion("predecessors between", value1, value2, "predecessors");
            return (Criteria) this;
        }

        public Criteria andPredecessorsNotBetween(String value1, String value2) {
            addCriterion("predecessors not between", value1, value2, "predecessors");
            return (Criteria) this;
        }

        public Criteria andParenttaskIsNull() {
            addCriterion("parenttask is null");
            return (Criteria) this;
        }

        public Criteria andParenttaskIsNotNull() {
            addCriterion("parenttask is not null");
            return (Criteria) this;
        }

        public Criteria andParenttaskEqualTo(Integer value) {
            addCriterion("parenttask =", value, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskNotEqualTo(Integer value) {
            addCriterion("parenttask <>", value, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskGreaterThan(Integer value) {
            addCriterion("parenttask >", value, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskGreaterThanOrEqualTo(Integer value) {
            addCriterion("parenttask >=", value, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskLessThan(Integer value) {
            addCriterion("parenttask <", value, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskLessThanOrEqualTo(Integer value) {
            addCriterion("parenttask <=", value, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskIn(List<Integer> values) {
            addCriterion("parenttask in", values, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskNotIn(List<Integer> values) {
            addCriterion("parenttask not in", values, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskBetween(Integer value1, Integer value2) {
            addCriterion("parenttask between", value1, value2, "parenttask");
            return (Criteria) this;
        }

        public Criteria andParenttaskNotBetween(Integer value1, Integer value2) {
            addCriterion("parenttask not between", value1, value2, "parenttask");
            return (Criteria) this;
        }

        public Criteria andActualstartdateIsNull() {
            addCriterion("actualStartDate is null");
            return (Criteria) this;
        }

        public Criteria andActualstartdateIsNotNull() {
            addCriterion("actualStartDate is not null");
            return (Criteria) this;
        }

        public Criteria andActualstartdateEqualTo(Date value) {
            addCriterion("actualStartDate =", value, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateNotEqualTo(Date value) {
            addCriterion("actualStartDate <>", value, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateGreaterThan(Date value) {
            addCriterion("actualStartDate >", value, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateGreaterThanOrEqualTo(Date value) {
            addCriterion("actualStartDate >=", value, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateLessThan(Date value) {
            addCriterion("actualStartDate <", value, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateLessThanOrEqualTo(Date value) {
            addCriterion("actualStartDate <=", value, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateIn(List<Date> values) {
            addCriterion("actualStartDate in", values, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateNotIn(List<Date> values) {
            addCriterion("actualStartDate not in", values, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateBetween(Date value1, Date value2) {
            addCriterion("actualStartDate between", value1, value2, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualstartdateNotBetween(Date value1, Date value2) {
            addCriterion("actualStartDate not between", value1, value2, "actualstartdate");
            return (Criteria) this;
        }

        public Criteria andActualenddateIsNull() {
            addCriterion("actualEndDate is null");
            return (Criteria) this;
        }

        public Criteria andActualenddateIsNotNull() {
            addCriterion("actualEndDate is not null");
            return (Criteria) this;
        }

        public Criteria andActualenddateEqualTo(Date value) {
            addCriterion("actualEndDate =", value, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateNotEqualTo(Date value) {
            addCriterion("actualEndDate <>", value, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateGreaterThan(Date value) {
            addCriterion("actualEndDate >", value, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateGreaterThanOrEqualTo(Date value) {
            addCriterion("actualEndDate >=", value, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateLessThan(Date value) {
            addCriterion("actualEndDate <", value, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateLessThanOrEqualTo(Date value) {
            addCriterion("actualEndDate <=", value, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateIn(List<Date> values) {
            addCriterion("actualEndDate in", values, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateNotIn(List<Date> values) {
            addCriterion("actualEndDate not in", values, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateBetween(Date value1, Date value2) {
            addCriterion("actualEndDate between", value1, value2, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andActualenddateNotBetween(Date value1, Date value2) {
            addCriterion("actualEndDate not between", value1, value2, "actualenddate");
            return (Criteria) this;
        }

        public Criteria andCostIsNull() {
            addCriterion("cost is null");
            return (Criteria) this;
        }

        public Criteria andCostIsNotNull() {
            addCriterion("cost is not null");
            return (Criteria) this;
        }

        public Criteria andCostEqualTo(Double value) {
            addCriterion("cost =", value, "cost");
            return (Criteria) this;
        }

        public Criteria andCostNotEqualTo(Double value) {
            addCriterion("cost <>", value, "cost");
            return (Criteria) this;
        }

        public Criteria andCostGreaterThan(Double value) {
            addCriterion("cost >", value, "cost");
            return (Criteria) this;
        }

        public Criteria andCostGreaterThanOrEqualTo(Double value) {
            addCriterion("cost >=", value, "cost");
            return (Criteria) this;
        }

        public Criteria andCostLessThan(Double value) {
            addCriterion("cost <", value, "cost");
            return (Criteria) this;
        }

        public Criteria andCostLessThanOrEqualTo(Double value) {
            addCriterion("cost <=", value, "cost");
            return (Criteria) this;
        }

        public Criteria andCostIn(List<Double> values) {
            addCriterion("cost in", values, "cost");
            return (Criteria) this;
        }

        public Criteria andCostNotIn(List<Double> values) {
            addCriterion("cost not in", values, "cost");
            return (Criteria) this;
        }

        public Criteria andCostBetween(Double value1, Double value2) {
            addCriterion("cost between", value1, value2, "cost");
            return (Criteria) this;
        }

        public Criteria andCostNotBetween(Double value1, Double value2) {
            addCriterion("cost not between", value1, value2, "cost");
            return (Criteria) this;
        }

        public Criteria andActualcostIsNull() {
            addCriterion("actualCost is null");
            return (Criteria) this;
        }

        public Criteria andActualcostIsNotNull() {
            addCriterion("actualCost is not null");
            return (Criteria) this;
        }

        public Criteria andActualcostEqualTo(Double value) {
            addCriterion("actualCost =", value, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostNotEqualTo(Double value) {
            addCriterion("actualCost <>", value, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostGreaterThan(Double value) {
            addCriterion("actualCost >", value, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostGreaterThanOrEqualTo(Double value) {
            addCriterion("actualCost >=", value, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostLessThan(Double value) {
            addCriterion("actualCost <", value, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostLessThanOrEqualTo(Double value) {
            addCriterion("actualCost <=", value, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostIn(List<Double> values) {
            addCriterion("actualCost in", values, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostNotIn(List<Double> values) {
            addCriterion("actualCost not in", values, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostBetween(Double value1, Double value2) {
            addCriterion("actualCost between", value1, value2, "actualcost");
            return (Criteria) this;
        }

        public Criteria andActualcostNotBetween(Double value1, Double value2) {
            addCriterion("actualCost not between", value1, value2, "actualcost");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneIsNull() {
            addCriterion("ismilestone is null");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneIsNotNull() {
            addCriterion("ismilestone is not null");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneEqualTo(Boolean value) {
            addCriterion("ismilestone =", value, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneNotEqualTo(Boolean value) {
            addCriterion("ismilestone <>", value, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneGreaterThan(Boolean value) {
            addCriterion("ismilestone >", value, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneGreaterThanOrEqualTo(Boolean value) {
            addCriterion("ismilestone >=", value, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneLessThan(Boolean value) {
            addCriterion("ismilestone <", value, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneLessThanOrEqualTo(Boolean value) {
            addCriterion("ismilestone <=", value, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneIn(List<Boolean> values) {
            addCriterion("ismilestone in", values, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneNotIn(List<Boolean> values) {
            addCriterion("ismilestone not in", values, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneBetween(Boolean value1, Boolean value2) {
            addCriterion("ismilestone between", value1, value2, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andIsmilestoneNotBetween(Boolean value1, Boolean value2) {
            addCriterion("ismilestone not between", value1, value2, "ismilestone");
            return (Criteria) this;
        }

        public Criteria andTasklistidIsNull() {
            addCriterion("tasklistid is null");
            return (Criteria) this;
        }

        public Criteria andTasklistidIsNotNull() {
            addCriterion("tasklistid is not null");
            return (Criteria) this;
        }

        public Criteria andTasklistidEqualTo(Integer value) {
            addCriterion("tasklistid =", value, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidNotEqualTo(Integer value) {
            addCriterion("tasklistid <>", value, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidGreaterThan(Integer value) {
            addCriterion("tasklistid >", value, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidGreaterThanOrEqualTo(Integer value) {
            addCriterion("tasklistid >=", value, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidLessThan(Integer value) {
            addCriterion("tasklistid <", value, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidLessThanOrEqualTo(Integer value) {
            addCriterion("tasklistid <=", value, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidIn(List<Integer> values) {
            addCriterion("tasklistid in", values, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidNotIn(List<Integer> values) {
            addCriterion("tasklistid not in", values, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidBetween(Integer value1, Integer value2) {
            addCriterion("tasklistid between", value1, value2, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andTasklistidNotBetween(Integer value1, Integer value2) {
            addCriterion("tasklistid not between", value1, value2, "tasklistid");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIsNull() {
            addCriterion("createdTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIsNotNull() {
            addCriterion("createdTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeEqualTo(Date value) {
            addCriterion("createdTime =", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotEqualTo(Date value) {
            addCriterion("createdTime <>", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeGreaterThan(Date value) {
            addCriterion("createdTime >", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createdTime >=", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeLessThan(Date value) {
            addCriterion("createdTime <", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeLessThanOrEqualTo(Date value) {
            addCriterion("createdTime <=", value, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeIn(List<Date> values) {
            addCriterion("createdTime in", values, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotIn(List<Date> values) {
            addCriterion("createdTime not in", values, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeBetween(Date value1, Date value2) {
            addCriterion("createdTime between", value1, value2, "createdtime");
            return (Criteria) this;
        }

        public Criteria andCreatedtimeNotBetween(Date value1, Date value2) {
            addCriterion("createdTime not between", value1, value2, "createdtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIsNull() {
            addCriterion("lastUpdatedTime is null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIsNotNull() {
            addCriterion("lastUpdatedTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeEqualTo(Date value) {
            addCriterion("lastUpdatedTime =", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotEqualTo(Date value) {
            addCriterion("lastUpdatedTime <>", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeGreaterThan(Date value) {
            addCriterion("lastUpdatedTime >", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("lastUpdatedTime >=", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeLessThan(Date value) {
            addCriterion("lastUpdatedTime <", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeLessThanOrEqualTo(Date value) {
            addCriterion("lastUpdatedTime <=", value, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeIn(List<Date> values) {
            addCriterion("lastUpdatedTime in", values, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotIn(List<Date> values) {
            addCriterion("lastUpdatedTime not in", values, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeBetween(Date value1, Date value2) {
            addCriterion("lastUpdatedTime between", value1, value2, "lastupdatedtime");
            return (Criteria) this;
        }

        public Criteria andLastupdatedtimeNotBetween(Date value1, Date value2) {
            addCriterion("lastUpdatedTime not between", value1, value2, "lastupdatedtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_task
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_task
     *
     * @mbggenerated Thu Dec 27 11:23:39 GMT+07:00 2012
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}