<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    id="WebApp_ID" version="3.0">
    <display-name>mycollab-web</display-name>

    <listener>
        <listener-class>net.bull.javamelody.SessionListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <filter>
        <filter-name>monitoring</filter-name>
        <filter-class>net.bull.javamelody.CustomMonitoringFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <!-- <filter-mapping> <filter-name>monitoring</filter-name> <url-pattern>/*</url-pattern> 
        </filter-mapping> -->

    <filter>
        <filter-name>GzipFilter</filter-name>
        <filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>
        <init-param>
            <param-name>mimeTypes</param-name>
            <param-value>text/javascript,application/javascript,application/x-javascript,text/html,text/css,text/plain</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>ExpiresFilter</filter-name>
        <filter-class>fr.xebia.servlet.filter.ExpiresFilter</filter-class>
        <init-param>
            <param-name>ExpiresByType image</param-name>
            <param-value>access plus 1 week</param-value>
        </init-param>
        <init-param>
            <param-name>ExpiresByType text</param-name>
            <param-value>access plus 1 week</param-value>
        </init-param>
    </filter>
    <!-- <filter-mapping> <filter-name>ExpiresFilter</filter-name> <url-pattern>/*</url-pattern> 
        <dispatcher>REQUEST</dispatcher> </filter-mapping> -->

    <!-- VAADIN PARAMS -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:/META-INF/spring/*-context.xml 
            classpath:net/bull/javamelody/monitoring-spring.xml
        </param-value>
    </context-param>
    <context-param>
        <description>
		Vaadin production mode</description>
        <param-name>productionMode</param-name>
        <param-value>false</param-value>
    </context-param>

    <!-- RESTLET PARAMS -->
    <context-param>
        <param-name>org.restlet.application</param-name>
        <param-value>restApp</param-value>
    </context-param>

    <!-- REST ADAPTER -->
    <servlet>
        <servlet-name>RestletServlet</servlet-name>
        <servlet-class>org.restlet.ext.spring.SpringServerServlet</servlet-class>
    </servlet>

    <!-- Catch api request -->
    <servlet-mapping>
        <servlet-name>RestletServlet</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>

    <!-- mapping all .vm files to velocity servlets -->
    <servlet>
        <servlet-name>velocity</servlet-name>
        <servlet-class>org.apache.velocity.tools.view.servlet.VelocityViewServlet</servlet-class>
        <!-- load my toolbox -->
        <init-param>
            <param-name>org.apache.velocity.toolbox</param-name>
            <param-value>/WEB-INF/toolbox.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>velocity</servlet-name>
        <url-pattern>/templates/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/assets/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <description>AtmosphereServlet</description>
        <servlet-name>AtmosphereServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
        <init-param>
            <!-- prevent deadlocks -->
            <param-name>org.atmosphere.disableOnStateEvent</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.cpr.sessionSupport</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.cpr.packages</param-name>
            <param-value>org.vaadin.dontpush.server</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <!--Uncomment if you want to use Servlet 3.0 Async Support -->
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>AtmosphereServlet</servlet-name>
        <url-pattern>/UIDL/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>MyCollabApplication</servlet-name>
        <servlet-class>org.vaadin.dontpush.server.DontPushOzoneServlet</servlet-class>
        <init-param>
            <param-name>application</param-name>
            <param-value>com.esofthead.mycollab.web.MyCollabApplication</param-value>
        </init-param>
        <init-param>
            <param-name>widgetset</param-name>
            <param-value>com.esofthead.mycollab.widgetset.MyCollabWidgetSet</param-value>
        </init-param>
        <init-param>
            <description>This is optinal parameter that control the
            timeout before "Conection guard" is for end user. If you
            have lots of synchronous tasks that take long time, you might
            want to increase this value to avoid non-intentional red screens.
            Default value is 5 seconds.</description>
            <param-name>connectionGuardTimeout</param-name>
            <param-value>2</param-value>
        </init-param>

        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>MyCollabApplication</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>
</web-app>