<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.esofthead.mycollab.module.project.dao.ProjectGenericTaskMapper">
	<resultMap id="BaseResultMap"
		type="com.esofthead.mycollab.module.project.domain.ProjectGenericTask">
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="assignUser" jdbcType="VARCHAR" property="assignUser" />
		<result column="assignUserFullName" jdbcType="VARCHAR"
			property="assignUserFullName" />
        <result column="assignUserAvatarId" jdbcType="VARCHAR"
            property="assignUserAvatarId" />
		<result column="dueDate" jdbcType="TIMESTAMP" property="dueDate" />
		<result column="projectId" jdbcType="INTEGER" property="projectId" />
		<result column="projectName" jdbcType="VARCHAR" property="projectName" />
        <result column="projectShortName" jdbcType="VARCHAR" property="projectShortName" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="typeId" jdbcType="INTEGER" property="typeId" />
		<result column="lastUpdatedTime" jdbcType="TIMESTAMP" property="lastUpdatedTime" />
	</resultMap>

	<resultMap id="BaseResultTaskCountMap"
		type="com.esofthead.mycollab.module.project.domain.ProjectGenericTaskCount">
		<result column="assignUser" jdbcType="VARCHAR" property="assignUser" />
		<result column="assignUserFullName" jdbcType="VARCHAR"
			property="assignUserFullName" />
		<result column="projectId" jdbcType="INTEGER" property="projectId" />
		<result column="projectName" jdbcType="VARCHAR" property="projectName" />
		<result column="taskCount" jdbcType="INTEGER" property="taskCount" />
	</resultMap>

	<sql id="queryProblemSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.name)
            ${searchCriteria.name.operation} m_prj_problem.issuename LIKE '%${searchCriteria.name.value}%'
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_problem.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.projectIds)
            ${searchCriteria.projectIds.operation} m_prj_problem.projectid IN
            #repeat(${searchCriteria.projectIds.values} $projectId "," "(" ")")
                @{projectId}
            #end
        #end
        
        #ifnotnull($searchCriteria.assignUser)
            ${searchCriteria.assignUser.operation} m_prj_problem.assigntouser = @{searchCriteria.assignUser.value}
        #end
        
        #ifnotnull($searchCriteria.isOpenned)
            ${searchCriteria.isOpenned.operation} m_prj_problem.status='Open'
        #end
        
         #ifnotnull($searchCriteria.dueDate)
            ${searchCriteria.dueDate.operation}
            CAST(m_prj_problem.datedue AS DATE )
            ${searchCriteria.dueDate.comparision}
            @{searchCriteria.dueDate.value}
        #end
        ]]>
	</sql>

	<sql id="queryRiskSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.name)
            ${searchCriteria.name.operation} m_prj_risk.riskname LIKE '%${searchCriteria.name.value}%'
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_risk.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.projectIds)
            ${searchCriteria.projectIds.operation} m_prj_risk.projectid IN
            #repeat(${searchCriteria.projectIds.values} $projectId "," "(" ")")
                @{projectId}
            #end
        #end
        
        #ifnotnull($searchCriteria.assignUser)
            ${searchCriteria.assignUser.operation} m_prj_risk.assigntouser = @{searchCriteria.assignUser.value}
        #end
        
        #ifnotnull($searchCriteria.isOpenned)
            ${searchCriteria.isOpenned.operation} m_prj_risk.status='Open'
        #end
        
        #ifnotnull($searchCriteria.dueDate)
            ${searchCriteria.dueDate.operation}
            CAST(m_prj_risk.datedue AS DATE )
            ${searchCriteria.dueDate.comparision}
            @{searchCriteria.dueDate.value}
        #end
        ]]>
	</sql>

	<sql id="queryBugSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.name)
            ${searchCriteria.name.operation} m_tracker_bug.summary LIKE '%${searchCriteria.name.value}%'
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_tracker_bug.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.projectIds)
            ${searchCriteria.projectIds.operation} m_tracker_bug.projectid IN
            #repeat(${searchCriteria.projectIds.values} $projectId "," "(" ")")
                @{projectId}
            #end
        #end
        
        #ifnotnull($searchCriteria.assignUser)
            ${searchCriteria.assignUser.operation} m_tracker_bug.assignuser = @{searchCriteria.assignUser.value}
        #end
        
        #ifnotnull($searchCriteria.isOpenned)
            ${searchCriteria.isOpenned.operation} m_tracker_bug.status IN ('Open','InProgress', 'Reopenned', 'Test Pending')
        #end
        
         #ifnotnull($searchCriteria.dueDate)
            ${searchCriteria.dueDate.operation}
            CAST(m_tracker_bug.duedate AS DATE )
            ${searchCriteria.dueDate.comparision}
            @{searchCriteria.dueDate.value}
        #end
        ]]>
	</sql>

	<sql id="queryTaskSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.name)
            ${searchCriteria.name.operation} m_prj_task.taskname LIKE '%${searchCriteria.name.value}%'
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_task.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.projectIds)
            ${searchCriteria.projectIds.operation} m_prj_task.projectid IN
            #repeat(${searchCriteria.projectIds.values} $projectId "," "(" ")")
                @{projectId}
            #end
        #end
        
        #ifnotnull($searchCriteria.assignUser)
            ${searchCriteria.assignUser.operation} m_prj_task.assignUser = @{searchCriteria.assignUser.value}
        #end
        
        #ifnotnull($searchCriteria.isOpenned)
            ${searchCriteria.isOpenned.operation} m_prj_task.status='Open'
        #end
        
        #ifnotnull($searchCriteria.dueDate)
            ${searchCriteria.dueDate.operation}
            CAST(m_prj_task.deadline AS DATE )
            ${searchCriteria.dueDate.comparision}
            @{searchCriteria.dueDate.value}
        #end
        ]]>
	</sql>

	<sql id="selectGenericTaskFromRisk">

    <![CDATA[
          SELECT m_prj_risk.riskname AS name, m_prj_risk.assigntouser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            s_user.avatarId as assignUserAvatarId,
            m_prj_risk.datedue AS dueDate, m_prj_risk.projectid AS projectId, m_prj_project.name AS projectName,
            m_prj_project.shortname AS projectShortName,
            'Project-Risk' AS type, m_prj_risk.id AS typeid, m_prj_risk.lastUpdatedTime AS lastUpdatedTime
                 
          FROM m_prj_risk
              LEFT OUTER JOIN s_user ON (m_prj_risk.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_risk.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<sql id="selectGenericTaskFromProblem">

    <![CDATA[
          SELECT m_prj_problem.issuename as name, m_prj_problem.assigntouser as assignUser, 
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            s_user.avatarId as assignUserAvatarId,
            m_prj_problem.datedue as dueDate, m_prj_problem.projectid as projectId, m_prj_project.name AS projectName,
            m_prj_project.shortname AS projectShortName,
            'Project-Problem' AS type, m_prj_problem.id AS typeId, m_prj_problem.lastUpdatedTime AS lastUpdatedTime
                 
          FROM m_prj_problem
              LEFT OUTER JOIN s_user ON (m_prj_problem.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_problem.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<sql id="selectGenericTaskFromBug">

    <![CDATA[
          SELECT m_tracker_bug.summary AS name, m_tracker_bug.assignuser AS assignUser,
                concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
                s_user.avatarId as assignUserAvatarId,
                m_tracker_bug.duedate AS dueDate, m_tracker_bug.projectid AS projectId, m_prj_project.name AS projectName,
                m_prj_project.shortname AS projectShortName,
                'Project-Bug' AS type, m_tracker_bug.bugkey AS typeId, m_tracker_bug.lastUpdatedTime AS lastUpdatedTime
                 
          FROM m_tracker_bug
              LEFT OUTER JOIN s_user ON (m_tracker_bug.assignuser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_tracker_bug.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<sql id="selectGenericTaskFromTask">

        <![CDATA[
          SELECT m_prj_task.taskname AS name, m_prj_task.assignUser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            s_user.avatarId as assignUserAvatarId,
            m_prj_task.deadline AS dueDate, m_prj_task.projectid AS projectId, m_prj_project.name AS projectName,
            m_prj_project.shortname AS projectShortName,
            'Project-Task' AS type, m_prj_task.taskkey AS typeid, m_prj_task.lastUpdatedTime AS lastUpdatedTime
          
          FROM m_prj_task
            LEFT OUTER JOIN s_user ON (m_prj_task.assignUser=s_user.username)
            LEFT OUTER JOIN m_prj_project ON (m_prj_task.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<select id="getTotalCountFromProblem" parameterType="ProjectGenericTaskSearchCriteria"
		resultType="int" lang="velocity">
		SELECT count(*) as totalCount FROM m_prj_problem

		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryProblemSearchCriteria" />
			#end
		#end
	</select>

	<select id="getTotalCountFromRisk" parameterType="ProjectGenericTaskSearchCriteria"
		resultType="int" lang="velocity">
		SELECT count(*) as totalCount FROM m_prj_risk

		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryRiskSearchCriteria" />
			#end
		#end
	</select>

	<select id="getTotalCountFromBug" parameterType="ProjectGenericTaskSearchCriteria"
		resultType="int" lang="velocity">
		SELECT count(*) as totalCount FROM m_tracker_bug

		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryBugSearchCriteria" />
			#end
		#end
	</select>

	<select id="getTotalCountFromTask" parameterType="ProjectGenericTaskSearchCriteria"
		resultType="int" lang="velocity">
		SELECT count(*) as totalCount FROM m_prj_task

		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")

				<include refid="queryTaskSearchCriteria" />
			#end
		#end
	</select>

	<sql id="orderStatement">
		ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderByField)
		    ${_parameter.searchCriteria.orderByField} ${_parameter.searchCriteria.sortDirection},
        #end
        projectName ASC
	</sql>

	<select id="findPagableListByCriteria" parameterType="ProjectGenericTaskSearchCriteria"
		resultMap="BaseResultMap" lang="velocity">

		(
		<include refid="selectGenericTaskFromProblem" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryProblemSearchCriteria" />
			#end
		#end
		)

		UNION

		(
		<include refid="selectGenericTaskFromRisk" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryRiskSearchCriteria" />
			#end
		#end
		)

		UNION

		(
		<include refid="selectGenericTaskFromBug" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryBugSearchCriteria" />
			#end
		#end
		)

		UNION

		(
		<include refid="selectGenericTaskFromTask" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryTaskSearchCriteria" />
			#end
		#end
		)
		#ifnotnull($_parameter.searchCriteria)
			<include refid="orderStatement" />
		#end
	</select>

	<sql id="selectGenericTaskCountFromTask">

        <![CDATA[
          SELECT m_prj_task.assignUser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_task.projectid AS projectId, m_prj_project.name AS projectName
          
          FROM m_prj_task
            LEFT OUTER JOIN s_user ON (m_prj_task.assignUser=s_user.username)
            LEFT OUTER JOIN m_prj_project ON (m_prj_task.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<sql id="selectGenericTaskCountFromBug">

    <![CDATA[
          SELECT m_tracker_bug.assignuser AS assignUser,
                concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
                m_tracker_bug.projectid AS projectId, m_prj_project.name AS projectName
                 
          FROM m_tracker_bug
              LEFT OUTER JOIN s_user ON (m_tracker_bug.assignuser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_tracker_bug.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<sql id="selectGenericTaskCountFromRisk">

    <![CDATA[
          SELECT m_prj_risk.assigntouser AS assignUser,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_risk.projectid AS projectId, m_prj_project.name AS projectName
                 
          FROM m_prj_risk
              LEFT OUTER JOIN s_user ON (m_prj_risk.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_risk.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<sql id="selectGenericTaskCountFromProblem">

    <![CDATA[
          SELECT m_prj_problem.assigntouser as assignUser, 
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
            m_prj_problem.projectid as projectId, m_prj_project.name AS projectName
                 
          FROM m_prj_problem
              LEFT OUTER JOIN s_user ON (m_prj_problem.assigntouser=s_user.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_problem.projectid=m_prj_project.id AND m_prj_project.projectStatus="Open")
        ]]>
	</sql>

	<select id="findPagableTaskCountListByCriteria" parameterType="ProjectGenericTaskSearchCriteria"
		resultMap="BaseResultTaskCountMap" lang="velocity">

		SELECT COUNT(*) AS taskCount, agreeT.projectId,
		agreeT.projectName, agreeT.assignUser, agreeT.assignUserFullName
		FROM
		(
		(
		<include refid="selectGenericTaskCountFromProblem" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryProblemSearchCriteria" />
			#end
		#end
		)

		UNION ALL

		(
		<include refid="selectGenericTaskCountFromRisk" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryRiskSearchCriteria" />
			#end
		#end
		)

		UNION ALL

		(
		<include refid="selectGenericTaskCountFromBug" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryBugSearchCriteria" />
			#end
		#end
		)

		UNION ALL

		(
		<include refid="selectGenericTaskCountFromTask" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="queryTaskSearchCriteria" />
			#end
		#end
		)
		) AS agreeT

		GROUP BY agreeT.projectId
	</select>
</mapper>