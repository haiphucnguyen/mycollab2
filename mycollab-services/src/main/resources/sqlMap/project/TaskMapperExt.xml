<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esofthead.mycollab.module.project.dao.TaskMapperExt">
    
    <resultMap
        extends="com.esofthead.mycollab.module.project.dao.TaskMapper.ResultMapWithBLOBs"
        id="TaskResult" type="com.esofthead.mycollab.module.project.domain.SimpleTask">
        <result column="projectName" property="projectName"
            jdbcType="VARCHAR" />
        <result column="numComments" property="numComments"
            jdbcType="INTEGER" />
        <result column="taskListName" property="taskListName"
            jdbcType="VARCHAR" />
        <result column="assignUserAvatarId" property="assignUserAvatarId"
            jdbcType="VARCHAR" />
        <result column="assignUserFullName" property="assignUserFullName"
            jdbcType="VARCHAR" />
        <result column="logByAvatarId" property="logByAvatarId"
            jdbcType="VARCHAR" />
        <result column="logByFullName" property="logByFullName"
            jdbcType="VARCHAR" />
    </resultMap>

    <sql id="querySearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.taskName)
            ${searchCriteria.taskName.operation} m_prj_task.taskname LIKE '%${searchCriteria.taskName.value}%'
        #end
        
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_prj_task.id = @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
       
        #ifnotnull($searchCriteria.projectid)
            ${searchCriteria.projectid.operation} m_prj_task.projectid=@{searchCriteria.projectid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.statuses)
            ${searchCriteria.statuses.operation} m_prj_task.status IN
            #repeat(${searchCriteria.statuses.values} $status "," "(" ")")
                @{status}
            #end
        #end
        
        #ifnotnull($searchCriteria.priorities)
            ${searchCriteria.priorities.operation} m_prj_task.priority IN
            #repeat(${searchCriteria.priorities.values} $priority "," "(" ")")
                @{priority}
            #end
        #end
        
        #ifnotnull($searchCriteria.taskListId)
            ${searchCriteria.taskListId.operation} m_prj_task.tasklistid = @{searchCriteria.taskListId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.assignUser)
            #ifnotnull($searchCriteria.assignUser.value)
                ${searchCriteria.assignUser.operation} m_prj_task.assignUser = @{searchCriteria.assignUser.value}
            #end
            
            #ifnull($searchCriteria.assignUser.value)
                ${searchCriteria.assignUser.operation} m_prj_task.assignUser IS NULL
            #end    
        #end
        
        #ifnotnull($searchCriteria.milestoneId)
            ${searchCriteria.milestoneId.operation} m_prj_task_list.milestoneId=@{searchCriteria.milestoneId.value,jdbcType=NUMERIC}
        #end
        
        #selectExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="queryTotalCountSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.taskName)
            ${searchCriteria.taskName.operation} m_prj_task.taskname LIKE '%${searchCriteria.taskName.value}%'
        #end
       
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_prj_task.id = @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.projectid)
            ${searchCriteria.projectid.operation} m_prj_task.projectid=@{searchCriteria.projectid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.statuses)
            ${searchCriteria.statuses.operation} m_prj_task.status IN
            #repeat(${searchCriteria.statuses.values} $status "," "(" ")")
                @{status}
            #end
        #end
        
        #ifnotnull($searchCriteria.priorities)
            ${searchCriteria.priorities.operation} m_prj_task.priority IN
            #repeat(${searchCriteria.priorities.values} $priority "," "(" ")")
                @{priority}
            #end
        #end
        
        #ifnotnull($searchCriteria.taskListId)
            ${searchCriteria.taskListId.operation} m_prj_task.tasklistid = @{searchCriteria.taskListId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.assignUser)
            ${searchCriteria.assignUser.operation} m_prj_task.assignUser = @{searchCriteria.assignUser.value}
        #end
        
        #ifnotnull($searchCriteria.milestoneId)
            ${searchCriteria.milestoneId.operation} m_prj_task_list.milestoneId=@{searchCriteria.milestoneId.value,jdbcType=NUMERIC}
        #end
        
        #totalCountExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="selectTask">
        <![CDATA[
          SELECT m_prj_task.id, m_prj_task.taskname, m_prj_task.percentagecomplete, m_prj_task.startdate, m_prj_task.enddate, m_prj_task.priority, 
                 m_prj_task.duration, m_prj_task.isestimated, m_prj_task.projectid, m_prj_task.deadline, m_prj_task.notes, m_prj_task.taskindex, 
                 m_prj_task.actualStartDate, m_prj_task.actualEndDate, m_prj_task.originalEstimate, m_prj_task.remainEstimate,
                 m_prj_task.tasklistid, m_prj_task.createdTime, m_prj_task.lastUpdatedTime, m_prj_task.assignUser, m_prj_task.sAccountId,
                 m_prj_task_list.name AS taskListName, m_prj_project.name AS projectName, m_prj_task.status,
                 m_prj_task.logBy, m_prj_task.taskkey,
                 s_user.avatarId AS assignUserAvatarId,
                 concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS assignUserFullName,
                 log_user.avatarId AS logByAvatarId,
                 concat(log_user.firstname, ' ', LTRIM(concat(IFNULL(log_user.middlename, ''), ' ')), log_user.lastname) AS logByFullName
          FROM m_prj_task
              LEFT OUTER JOIN m_prj_project ON (m_prj_task.projectid = m_prj_project.id) 
              LEFT OUTER JOIN m_prj_task_list ON (m_prj_task_list.id = m_prj_task.tasklistid)
              LEFT OUTER JOIN s_user ON (s_user.username = m_prj_task.assignUser)
              LEFT OUTER JOIN s_user AS log_user ON (log_user.username = m_prj_task.logBy)
        ]]>
    </sql>

    <sql id="orderStatement">
        ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderByField)
            ${_parameter.searchCriteria.orderByField} ${_parameter.searchCriteria.sortDirection},
        #end
        m_prj_task.startdate ASC, m_prj_task.enddate ASC
    </sql>

    <select id="getTotalCount" resultType="int" parameterType="TaskSearchCriteria" lang="velocity">
        SELECT count(*) as totalCount FROM m_prj_task
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="queryTotalCountSearchCriteria" />
            #end
        #end
    </select>

    <select id="findPagableListByCriteria" resultMap="TaskResult"
        parameterType="TaskSearchCriteria" lang="velocity">
        <include refid="selectTask" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end    
        <include refid="orderStatement" />
    </select>

    <select id="findTaskById" parameterType="java.lang.Integer"
        resultMap="TaskResult" lang="velocity">
        <include refid="selectTask" />

        WHERE m_prj_task.id=@{taskId, jdbcType=NUMERIC}
    </select>

    <select id="getNextItemKey" parameterType="map" resultType="java.lang.Integer" lang="velocity">
        SELECT MIN(id) FROM m_prj_task

        #trimext("WHERE" "AND|OR")
            <include refid="querySearchCriteria" />
        #end
    </select>

    <select id="getPreviousItemKey" parameterType="map"
        resultType="java.lang.Integer" lang="velocity">
        SELECT MAX(id) FROM m_prj_task

        #trimext("WHERE" "AND|OR")
            <include refid="querySearchCriteria" />
        #end
    </select>

    <select id="getMaxKey" parameterType="java.lang.Integer"
        resultType="java.lang.Integer" lang="velocity">
        SELECT MAX(taskkey) 
        FROM m_prj_task
        WHERE m_prj_task.projectid=@{projectId, jdbcType=NUMERIC}
    </select>
    
    <select id="getPrioritySummary" parameterType="TaskSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_prj_task.priority AS groupid,
            COUNT(m_prj_task.priority) AS value, '' as groupname
        FROM m_prj_task
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_prj_task.priority
    </select>
    
    <select id="getAssignedDefectsSummary" parameterType="TaskSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">
        SELECT m_prj_task.assignUser AS groupid,
            COUNT(IFNULL(m_prj_task.assignUser, '')) AS value,
            s_user.avatarId AS extraValue,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) as groupname
        FROM m_prj_task
            LEFT OUTER JOIN s_user ON (m_prj_task.assignUser = s_user.username)
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_prj_task.assignUser
    </select>
    
</mapper>