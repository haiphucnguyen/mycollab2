<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapperExt">
    
    <resultMap extends="com.esofthead.mycollab.module.project.dao.ItemTimeLoggingMapper.ResultMapWithBLOBs"
        id="TimeLoggingResult" type="com.esofthead.mycollab.module.project.domain.SimpleItemTimeLogging">
        <result column="logUserAvatarId" jdbcType="VARCHAR" property="logUserAvatarId" />
        <result column="logUserFullName" jdbcType="VARCHAR" property="logUserFullName" />
        <result column="summary" jdbcType="VARCHAR" property="summary" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="projectName" jdbcType="VARCHAR" property="projectName" />
        <result column="projectShortName" jdbcType="VARCHAR" property="projectShortName" />
        <result column="percentageComplete" jdbcType="DOUBLE" property="percentageComplete" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="dueDate" jdbcType="TIMESTAMP" property="dueDate" />
        <result column="extraTypeId" jdbcType="INTEGER" property="extraTypeId" />
    </resultMap>

    <sql id="querySearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.type)
            ${searchCriteria.type.operation} m_prj_time_logging.type = @{searchCriteria.type.value}
        #end
        
        #ifnotnull($searchCriteria.typeId)
            ${searchCriteria.typeId.operation} m_prj_time_logging.typeId = @{searchCriteria.typeId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.isBillable)
            ${searchCriteria.isBillable.operation} m_prj_time_logging.isBillable = @{searchCriteria.isBillable.value,jdbcType=BOOLEAN}
        #end
        
        #ifnotnull($searchCriteria.projectIds)
            ${searchCriteria.projectIds.operation} 
            m_prj_time_logging.projectId IN
            #repeat(${searchCriteria.projectIds.values} $projectId "," "(" ")")
                @{projectId}
            #end
        #end
        
        #ifnotnull($searchCriteria.logUsers)
            ${searchCriteria.logUsers.operation}
            m_prj_time_logging.loguser IN
            #repeat(${searchCriteria.logUsers.values} $logUser "," "(" ")")
                @{logUser}
            #end
        #end

        #selectExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="selectTask">
        <![CDATA[
          	SELECT m_prj_time_logging.id, m_prj_time_logging.loguser, m_prj_time_logging.projectId, m_prj_time_logging.createdTime, m_prj_time_logging.lastUpdatedTime, 
                 m_prj_time_logging.logForDay, m_prj_time_logging.isBillable, m_prj_time_logging.createdUser,
                 m_prj_time_logging.logValue, m_prj_time_logging.note, m_prj_task.id AS typeId, m_prj_time_logging.type, m_prj_task.taskkey AS extraTypeId,
                 s_user.avatarId AS logUserAvatarId,
                 concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS logUserFullName,
                 m_prj_task.taskname as summary,  m_prj_task.status, m_prj_task.deadline AS dueDate, m_prj_task.percentagecomplete AS percentageComplete,
                 m_prj_project.name AS projectName, m_prj_project.shortname AS projectShortName
                
            FROM m_prj_time_logging
              LEFT OUTER JOIN s_user ON (m_prj_time_logging.loguser=s_user.username)
              INNER JOIN m_prj_task ON ( m_prj_time_logging.typeId = m_prj_task.id and m_prj_time_logging.type = "Project-Task" )
              INNER JOIN m_prj_project ON (m_prj_project.id=m_prj_task.projectId)
        ]]>
    </sql>
	
  	<sql id="selectBug">
       <![CDATA[
       	SELECT m_prj_time_logging.id, m_prj_time_logging.loguser, m_prj_time_logging.projectId, m_prj_time_logging.createdTime, m_prj_time_logging.lastUpdatedTime, 
                m_prj_time_logging.logForDay, m_prj_time_logging.isBillable, m_prj_time_logging.createdUser,
                m_prj_time_logging.logValue, m_prj_time_logging.note, m_tracker_bug.id AS typeId, m_prj_time_logging.type, m_tracker_bug.bugkey AS extraTypeId,
                s_user.avatarId AS logUserAvatarId,
                concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS logUserFullName,
                m_tracker_bug.summary,  m_tracker_bug.status, m_tracker_bug.duedate AS dueDate, NULL as percentageComplete,
                m_prj_project.name AS projectName, m_prj_project.shortname AS projectShortName
          
           FROM m_prj_time_logging
             LEFT OUTER JOIN s_user ON (m_prj_time_logging.loguser=s_user.username)
             INNER JOIN m_tracker_bug ON ( m_prj_time_logging.typeId = m_tracker_bug.id and m_prj_time_logging.type = "Project-Bug" )
             INNER JOIN m_prj_project ON (m_prj_project.id=m_tracker_bug.projectId)
       ]]>
    </sql>
	
	<sql id="selectRisk">
       <![CDATA[
         	SELECT m_prj_time_logging.id, m_prj_time_logging.loguser, m_prj_time_logging.projectId, m_prj_time_logging.createdTime, m_prj_time_logging.lastUpdatedTime, 
                m_prj_time_logging.logForDay, m_prj_time_logging.isBillable, m_prj_time_logging.createdUser,
                m_prj_time_logging.logValue, m_prj_time_logging.note, m_prj_time_logging.typeId, m_prj_time_logging.type, NULL  AS extraTypeId,
                s_user.avatarId AS logUserAvatarId,
                concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS logUserFullName,
                m_prj_risk.riskname as summary,  m_prj_risk.status, m_prj_risk.datedue AS dueDate, NULL AS percentageComplete,
                m_prj_project.name AS projectName, m_prj_project.shortname AS projectShortName
               
           FROM m_prj_time_logging
             LEFT OUTER JOIN s_user ON (m_prj_time_logging.loguser=s_user.username)
             INNER JOIN m_prj_risk ON ( m_prj_time_logging.typeId = m_prj_risk.id and m_prj_time_logging.type = "Project-Risk" )
             INNER JOIN m_prj_project ON (m_prj_project.id=m_prj_risk.projectId)
       ]]>
    </sql>
	
    <sql id="selectTimeLogginWithoutType">
        <![CDATA[
        SELECT m_prj_time_logging.id, m_prj_time_logging.loguser, m_prj_time_logging.projectId, m_prj_time_logging.createdTime, m_prj_time_logging.lastUpdatedTime, 
                 m_prj_time_logging.logForDay, m_prj_time_logging.isBillable, m_prj_time_logging.createdUser,
                 m_prj_time_logging.logValue, m_prj_time_logging.note, m_prj_time_logging.typeId, m_prj_time_logging.type, NULL AS extraTypeId,
                 s_user.avatarId AS logUserAvatarId,
                 concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) AS logUserFullName,
                 '' AS summary,  '' AS status, NULL AS dueDate, NULL as percentageComplete,
                 m_prj_project.name AS projectName, m_prj_project.shortname AS projectShortName
          
            FROM m_prj_time_logging
              LEFT OUTER JOIN s_user ON (m_prj_time_logging.loguser=s_user.username)
              INNER JOIN m_prj_project ON (m_prj_project.id=m_prj_time_logging.projectId)
        ]]>
    </sql>
    
    <sql id="orderStatement">
        ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderFields)
            #repeat(${_parameter.searchCriteria.orderFields} $orderField "" "" "")
                ${orderField.field} ${orderField.direction},
            #end
        #end
        logForDay ASC , createdTime ASC
    </sql>

    <select id="getTotalCount" parameterType="ItemTimeLoggingSearchCriteria" resultType="int" lang="velocity">
        SELECT count(*) as totalCount FROM m_prj_time_logging

        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
    </select>

    <select id="getTotalHoursByCriteria" parameterType="ItemTimeLoggingSearchCriteria"
        resultType="double" lang="velocity">
        SELECT COALESCE(sum(logValue), 0) as totalHour FROM m_prj_time_logging

        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
    </select>

    <select id="findPagableListByCriteria" parameterType="ItemTimeLoggingSearchCriteria"
        resultMap="TimeLoggingResult" lang="velocity">
		(
		<include refid="selectTask" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
     
        ) UNION (
       
         <include refid="selectBug" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        ) UNION (

        <include refid="selectRisk" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        ) UNION (

        <include refid="selectTimeLogginWithoutType"/>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
                AND  m_prj_time_logging.type IS NULL
            #end
        #end
        )
        #ifnotnull($_parameter.searchCriteria)
            <include refid="orderStatement" />
        #end
    </select>
</mapper>
