<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esofthead.mycollab.module.project.dao.RiskMapperExt">

    <resultMap
        extends="com.esofthead.mycollab.module.project.dao.RiskMapper.ResultMapWithBLOBs"
        id="RiskResult" type="com.esofthead.mycollab.module.project.domain.SimpleRisk">
        <result column="risksource" property="risksource" jdbcType="VARCHAR" />
        <result column="raisedByUserAvatarId" property="raisedByUserAvatarId" jdbcType="VARCHAR" />
        <result column="raisedByUserFullName" property="raisedByUserFullName" jdbcType="VARCHAR" />
        <result column="assignToUserAvatarId" property="assignToUserAvatarId" jdbcType="VARCHAR" />
        <result column="assignedToUserFullName" property="assignedToUserFullName" jdbcType="VARCHAR" />
        <result column="projectName" property="projectName" jdbcType="VARCHAR" />
        <result column="milestoneName" property="milestoneName" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="querySearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_prj_risk.id ${searchCriteria.id.compareOperator} @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.riskname)
            ${searchCriteria.riskname.operation} m_prj_risk.riskname LIKE '%${searchCriteria.riskname.value}%'
        #end
        
        #ifnotnull($searchCriteria.projectId)
            ${searchCriteria.projectId.operation} m_prj_risk.projectid = @{searchCriteria.projectId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.raisedByUser)
            ${searchCriteria.raisedByUser.operation} m_prj_risk.raisedbyuser = @{searchCriteria.raisedByUser.value}
        #end
        
        #ifnotnull($searchCriteria.assignToUser)
            ${searchCriteria.assignToUser.operation} m_prj_risk.assigntouser = @{searchCriteria.assignToUser.value}
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_risk.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #selectExpr($searchCriteria.extraFields)
        ]]>
    </sql>
    
    <sql id="queryTotalCountSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_prj_risk.id ${searchCriteria.id.compareOperator} @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.riskname)
            ${searchCriteria.riskname.operation} m_prj_risk.riskname LIKE '%${searchCriteria.riskname.value}%'
        #end
        
        #ifnotnull($searchCriteria.projectId)
            ${searchCriteria.projectId.operation} m_prj_risk.projectid = @{searchCriteria.projectId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.raisedByUser)
            ${searchCriteria.raisedByUser.operation} m_prj_risk.raisedbyuser = @{searchCriteria.raisedByUser.value}
        #end
        
        #ifnotnull($searchCriteria.assignToUser)
            ${searchCriteria.assignToUser.operation} m_prj_risk.assigntouser = @{searchCriteria.assignToUser.value}
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_risk.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #totalCountExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="selectRisk">
        <![CDATA[
          SELECT m_prj_risk.id, m_prj_risk.riskname, m_prj_risk.description, m_prj_risk.projectid, m_prj_risk.raisedbyuser, 
                 m_prj_risk.assigntouser, m_prj_risk.consequence, m_prj_risk.probalitity, m_prj_risk.status, m_prj_risk.dateraised, 
                 m_prj_risk.datedue, m_prj_risk.startdate, m_prj_risk.enddate, m_prj_risk.response, m_prj_risk.resolution, m_prj_risk.level,
                 m_prj_risk.source, m_prj_risk.createdTime, m_prj_risk.lastUpdatedTime, m_prj_risk.type, m_prj_risk.typeid,  m_prj_risk.sAccountId,
                 raisedUser.avatarId AS raisedByUserAvatarId,
                 concat(raisedUser.firstname, ' ', LTRIM(concat(IFNULL(raisedUser.middlename, ''), ' ')), raisedUser.lastname) AS raisedByUserFullName,
                 assignedUser.avatarId AS assignToUserAvatarId,
                 concat(assignedUser.firstname, ' ', LTRIM(concat(IFNULL(assignedUser.middlename, ''), ' ')), assignedUser.lastname) AS assignedToUserFullName, 
                 m_prj_project.name as projectName, m_prj_risk.milestoneid, m_prj_milestone.name AS milestoneName
          FROM m_prj_risk
              LEFT OUTER JOIN s_user as raisedUser ON (m_prj_risk.raisedbyuser=raisedUser.username)
              LEFT OUTER JOIN s_user as assignedUser ON ( m_prj_risk.assigntouser=assignedUser.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_risk.projectid = m_prj_project.id)
              LEFT OUTER JOIN m_prj_milestone ON (m_prj_milestone.id = m_prj_risk.milestoneid)
        ]]>
    </sql>

    <sql id="orderStatement">
        ORDER BY
            #ifnotnull($_parameter.searchCriteria.orderFields)
                #repeat(${_parameter.searchCriteria.orderFields} $orderField "" "" "")
                    ${orderField.field} ${orderField.direction},
                #end
            #end
        m_prj_risk.lastUpdatedTime DESC
    </sql>

    <select id="getTotalCount" resultType="int" parameterType="RiskSearchCriteria" lang="velocity">
        SELECT count(*) as totalCount FROM m_prj_risk
        #ifnotnull($_parameter.searchCriteria)
          #trimext("WHERE" "AND|OR")
            <include refid="queryTotalCountSearchCriteria" />
          #end
        #end
    </select>

    <select id="findPagableListByCriteria" resultMap="RiskResult" parameterType="RiskSearchCriteria" lang="velocity">
        <include refid="com.esofthead.mycollab.module.project.dao.RiskMapperExt.selectRisk" />
        #ifnotnull($_parameter.searchCriteria)
          #trimext("WHERE" "AND|OR")
            <include refid="querySearchCriteria" />
          #end
        #end
        <include refid="orderStatement" />
    </select>

    <select id="findRiskById" parameterType="java.lang.Integer" resultMap="RiskResult" lang="velocity">
        <include refid="selectRisk" />
        WHERE m_prj_risk.id=@{riskId, jdbcType=NUMERIC}
    </select>

    <select id="getNextItemKey" parameterType="map" resultType="java.lang.Integer" lang="velocity">
        SELECT MIN(id) FROM m_prj_risk
        #trimext("WHERE" "AND|OR")
            <include refid="queryTotalCountSearchCriteria" />
        #end
    </select>

    <select id="getPreviousItemKey" parameterType="map" resultType="java.lang.Integer" lang="velocity">
        SELECT MAX(id) FROM m_prj_risk
        #trimext("WHERE" "AND|OR")
            <include refid="queryTotalCountSearchCriteria" />
        #end
    </select>

    <!-- Here for Mass Update -->
    <update id="updateBySearchCriteria" parameterType="map" lang="velocity">
        <include refid="com.esofthead.mycollab.module.project.dao.RiskMapper.massUpdateWithSessionSql" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="queryTotalCountSearchCriteria" />
            #end
        #end
    </update>
</mapper>