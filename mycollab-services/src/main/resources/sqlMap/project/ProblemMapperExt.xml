<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esofthead.mycollab.module.project.dao.ProblemMapperExt">

    <resultMap id="ProblemResult"
        extends="com.esofthead.mycollab.module.project.dao.ProblemMapper.ResultMapWithBLOBs"
        type="com.esofthead.mycollab.module.project.domain.SimpleProblem">

        <result column="raisedByUserAvatarId" jdbcType="VARCHAR"
            property="raisedByUserAvatarId" />

        <result column="raisedByUserFullName" jdbcType="VARCHAR"
            property="raisedByUserFullName" />

        <result column="assignUserAvatarId" jdbcType="VARCHAR"
            property="assignUserAvatarId" />

        <result column="assignedUserFullName" jdbcType="VARCHAR"
            property="assignedUserFullName" />
            
        <result column="projectName" property="projectName"
        	jdbcType="VARCHAR" />
    </resultMap>

    <sql id="querySearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_prj_problem.id ${searchCriteria.id.compareOperator} @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.problemname)
             ${searchCriteria.problemname.operation} m_prj_problem.issuename LIKE '%${searchCriteria.problemname.value}%'
        #end
        
        #ifnotnull($searchCriteria.projectId)
            ${searchCriteria.projectId.operation} m_prj_problem.projectid = @{searchCriteria.projectId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.raisedByUser)
            ${searchCriteria.raisedByUser.operation} m_prj_problem.raisedbyuser = @{searchCriteria.raisedByUser.value}
        #end
        
        #ifnotnull($searchCriteria.assignToUser)
            ${searchCriteria.assignToUser.operation} m_prj_problem.assigntouser = @{searchCriteria.assignToUser.value}
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_problem.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #selectExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="queryTotalCountSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_prj_problem.id ${searchCriteria.id.compareOperator} @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.problemname)
             ${searchCriteria.problemname.operation} m_prj_problem.issuename LIKE '%${searchCriteria.problemname.value}%'
        #end
        
        #ifnotnull($searchCriteria.projectId)
            ${searchCriteria.projectId.operation} m_prj_problem.projectid = @{searchCriteria.projectId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.raisedByUser)
            ${searchCriteria.raisedByUser.operation} m_prj_problem.raisedbyuser = @{searchCriteria.raisedByUser.value}
        #end
        
        #ifnotnull($searchCriteria.assignToUser)
            ${searchCriteria.assignToUser.operation} m_prj_problem.assigntouser = @{searchCriteria.assignToUser.value}
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_prj_problem.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #totalCountExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="selectProblem">

        <![CDATA[
          SELECT m_prj_problem.id, m_prj_problem.issuename, m_prj_problem.description, m_prj_problem.projectid, 
                 m_prj_problem.raisedbyuser, m_prj_problem.assigntouser, m_prj_problem.impact,
                 m_prj_problem.priority, m_prj_problem.status, m_prj_problem.dateraised, m_prj_problem.datedue, 
                 m_prj_problem.actualstartdate, m_prj_problem.actualenddate, 
                 m_prj_problem.createdTime, m_prj_problem.lastUpdatedTime, m_prj_problem.type, m_prj_problem.typeid,
                 m_prj_problem.level, m_prj_problem.resolution, m_prj_problem.problemsource, m_prj_problem.state,
                 m_prj_problem.sAccountId,
                 raisedUser.avatarId AS raisedByUserAvatarId,
                 concat(raisedUser.firstname, ' ', LTRIM(concat(IFNULL(raisedUser.middlename, ''), ' ')), raisedUser.lastname) AS raisedByUserFullName,
                 assignedUser.avatarId AS assignUserAvatarId,
                 concat(assignedUser.firstname, ' ', LTRIM(concat(IFNULL(assignedUser.middlename, ''), ' ')), assignedUser.lastname) AS assignedUserFullName,
                 m_prj_project.name as projectName
          FROM m_prj_problem
              LEFT OUTER JOIN s_user as raisedUser ON (m_prj_problem.raisedbyuser=raisedUser.username)
              LEFT OUTER JOIN s_user as assignedUser ON (m_prj_problem.assigntouser=assignedUser.username)
              LEFT OUTER JOIN m_prj_project ON (m_prj_problem.projectid = m_prj_project.id)
        ]]>
    </sql>

    <sql id="orderStatement">
        ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderFields)
            #repeat(${_parameter.searchCriteria.orderFields} $orderField "" "" "")
                ${orderField.field} ${orderField.direction},
            #end
        #end
        m_prj_problem.lastUpdatedTime DESC
    </sql>

    <select id="getTotalCount" parameterType="ProblemSearchCriteria"
        resultType="int" lang="velocity">
        SELECT count(*) as totalCount FROM m_prj_problem

        #ifnotnull($_parameter.searchCriteria)
        #trimext("WHERE" "AND|OR")

        <include refid="queryTotalCountSearchCriteria" />
        #end
        #end
    </select>

    <select id="findPagableListByCriteria" parameterType="ProblemSearchCriteria"
        resultMap="ProblemResult" lang="velocity">

        <include refid="selectProblem" />
        #ifnotnull($_parameter.searchCriteria)
        #trimext("WHERE" "AND|OR")

        <include refid="querySearchCriteria" />
        #end
        #end
        <include refid="orderStatement" />
    </select>

    <select id="findProblemById" parameterType="java.lang.Integer"
        resultMap="ProblemResult" lang="velocity">
        <include refid="selectProblem" />
        WHERE m_prj_problem.id=@{problemId, jdbcType=NUMERIC}
    </select>

    <select id="getNextItemKey" parameterType="map" resultType="java.lang.Integer"
        lang="velocity">
        SELECT MIN(id) FROM m_prj_problem

        #trimext("WHERE" "AND|OR")
        <include refid="queryTotalCountSearchCriteria" />
        #end
    </select>

    <select id="getPreviousItemKey" parameterType="map"
        resultType="java.lang.Integer" lang="velocity">
        SELECT MAX(id) FROM m_prj_problem

        #trimext("WHERE" "AND|OR")
        <include refid="queryTotalCountSearchCriteria" />
        #end
    </select>

    <!-- Here for Mass Update -->
    <update id="updateBySearchCriteria" parameterType="map" lang="velocity">
        <include
            refid="com.esofthead.mycollab.module.project.dao.ProblemMapper.massUpdateWithSessionSql" />

        #ifnotnull($_parameter.searchCriteria)
        #trimext("WHERE" "AND|OR")
        <include refid="queryTotalCountSearchCriteria" />
        #end
        #end
    </update>
</mapper>