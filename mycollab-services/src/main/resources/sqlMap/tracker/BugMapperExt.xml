<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esofthead.mycollab.module.tracker.dao.BugMapperExt">

    <resultMap id="SimpleBugResult"
        extends="com.esofthead.mycollab.module.tracker.dao.BugMapper.ResultMapWithBLOBs"
        type="com.esofthead.mycollab.module.tracker.domain.SimpleBug">

        <result column="loguserFullName" jdbcType="VARCHAR"
            property="loguserFullName" />

        <result column="loguserAvatarId" jdbcType="VARCHAR"
            property="loguserAvatarId" />

        <result column="assignuserFullName" jdbcType="VARCHAR"
            property="assignuserFullName" />

        <result column="assignUserAvatarId" jdbcType="VARCHAR"
            property="assignUserAvatarId" />

        <result column="projectname" jdbcType="VARCHAR" property="projectname" />
        
        <result column="projectShortName" jdbcType="VARCHAR" property="projectShortName" />

        <result column="milestoneName" jdbcType="VARCHAR"
            property="milestoneName" />

        <collection columnPrefix="affectedversion_" notNullColumn="id"
            ofType="com.esofthead.mycollab.module.tracker.domain.Version"
            property="affectedVersions"
            resultMap="com.esofthead.mycollab.module.tracker.dao.VersionMapper.BaseResultMap" />

        <collection columnPrefix="fixedversion_" notNullColumn="id"
            ofType="com.esofthead.mycollab.module.tracker.domain.Version"
            property="fixedVersions"
            resultMap="com.esofthead.mycollab.module.tracker.dao.VersionMapper.BaseResultMap" />

        <collection columnPrefix="component_" notNullColumn="id"
            ofType="com.esofthead.mycollab.module.tracker.domain.Component"
            property="components"
            resultMap="com.esofthead.mycollab.module.tracker.dao.ComponentMapper.BaseResultMap" />
    </resultMap>

    <sql id="queryTotalCountSearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.assignuser)
            ${searchCriteria.assignuser.operation} m_tracker_bug.assignuser=@{searchCriteria.assignuser.value}
        #end
        
        #ifnotnull($searchCriteria.summary)
            ${searchCriteria.summary.operation} m_tracker_bug.summary LIKE '%${searchCriteria.summary.value}%'
        #end
        
        #ifnotnull($searchCriteria.detail)
            ${searchCriteria.detail.operation} m_tracker_bug.detail LIKE '%${searchCriteria.detail.value}%'
        #end
        
        #ifnotnull($searchCriteria.description)
            ${searchCriteria.description.operation} m_tracker_bug.description LIKE '%${searchCriteria.description.value}%'
        #end
        
        #ifnotnull($searchCriteria.updatedDate)
            ${searchCriteria.updatedDate.operation}
            CAST(m_tracker_bug.lastUpdatedTime AS DATE )
            ${searchCriteria.updatedDate.comparison}
            @{searchCriteria.updatedDate.value}
        #end
        
        #ifnotnull($searchCriteria.dueDate)
            ${searchCriteria.dueDate.operation}
            CAST(m_tracker_bug.duedate AS DATE )
            ${searchCriteria.dueDate.comparison}
            @{searchCriteria.dueDate.value}
        #end
        
        #ifnotnull($searchCriteria.resolvedDate)
            ${searchCriteria.resolvedDate.operation}
            CAST(m_tracker_bug.resolveddate AS DATE )
            ${searchCriteria.resolvedDate.comparison}
            @{searchCriteria.resolvedDate.value}
        #end
        
        #ifnotnull($searchCriteria.updatedDateRange)
            ${searchCriteria.updatedDateRange.operation}
            CAST(m_tracker_bug.lastUpdatedTime AS DATE ) BETWEEN @{searchCriteria.updatedDateRange.from} AND @{searchCriteria.updatedDateRange.to}
        #end
        
        #ifnotnull($searchCriteria.dueDateRange)
            ${searchCriteria.dueDateRange.operation}
            CAST(m_tracker_bug.duedate AS DATE) BETWEEN @{searchCriteria.dueDateRange.from} AND @{searchCriteria.dueDateRange.to}
        #end
        
        #ifnotnull($searchCriteria.resolvedDateRange)
            ${searchCriteria.resolvedDateRange.operation}
            CAST(m_tracker_bug.resolveddate AS DATE ) BETWEEN @{searchCriteria.resolvedDateRange.from} AND @{searchCriteria.resolvedDateRange.to}
        #end
        
        #ifnotnull($searchCriteria.environment)
            ${searchCriteria.environment.operation} m_tracker_bug.environment LIKE '%${searchCriteria.environment.value}%'
        #end
        
        #ifnotnull($searchCriteria.loguser)
            ${searchCriteria.loguser.operation} m_tracker_bug.logby = @{searchCriteria.loguser.value}
        #end
        
        #ifnotnull($searchCriteria.projectId)
            ${searchCriteria.projectId.operation} m_tracker_bug.projectid=@{searchCriteria.projectId.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.affectedversionids)
            ${searchCriteria.affectedversionids.operation}
            #repeat(${searchCriteria.affectedversionids.values} $affectedversion "OR" "(" ")")
                EXISTS (SELECT 1
                FROM m_tracker_bug_related_item
                WHERE m_tracker_bug_related_item.type='AffVersion'
                    AND m_tracker_bug_related_item.typeid=@{affectedversion,jdbcType=NUMERIC}
                    AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                    LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.fixedversionids)
            ${searchCriteria.fixedversionids.operation}
            #repeat(${searchCriteria.fixedversionids.values} $fixedversion "OR" "(" ")")
                EXISTS (SELECT 1
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='FixVersion'
                        AND m_tracker_bug_related_item.typeid=@{fixedversion,jdbcType=NUMERIC}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.versionids)
            ${searchCriteria.versionids.operation}
            #repeat(${searchCriteria.versionids.values} $versionid "OR" "(" ")")
                EXISTS (SELECT 1
                FROM m_tracker_bug_related_item
                WHERE m_tracker_bug_related_item.type='AffVersion'
                    AND m_tracker_bug_related_item.typeid=@{versionid,jdbcType=NUMERIC}
                    AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                    LIMIT 1)
                  OR 
                EXISTS  (SELECT 1
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='FixVersion'
                        AND m_tracker_bug_related_item.typeid=@{versionid,jdbcType=NUMERIC}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                        LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.componentids)
            ${searchCriteria.componentids.operation}
            #repeat(${searchCriteria.componentids.values} $componentid "OR" "(" ")")
                EXISTS (SELECT 1
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='Component'
                        AND m_tracker_bug_related_item.typeid=@{componentid,jdbcType=NUMERIC}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                        LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.priorities)
            ${searchCriteria.priorities.operation}
            m_tracker_bug.priority IN
            #repeat(${searchCriteria.priorities.values} $priorityitem "," "(" ")")
                @{priorityitem}
            #end
        #end
        
        #ifnotnull($searchCriteria.statuses)
            ${searchCriteria.statuses.operation} m_tracker_bug.status IN
            #repeat(${searchCriteria.statuses.values} $status "," "(" ")")
                @{status}
            #end
        #end
        
        #ifnotnull($searchCriteria.resolutions)
            ${searchCriteria.resolutions.operation}
            m_tracker_bug.resolution IN
            #repeat(${searchCriteria.resolutions.values} $resolution "," "(" ")")
                @{resolution}
            #end
        #end
        
        #ifnotnull($searchCriteria.severities)
            ${searchCriteria.severities.operation}
            m_tracker_bug.severity IN
            #repeat(${searchCriteria.severities.values} $severity "," "(" ")")
                @{severity}
            #end
        #end
        
        #ifnotnull($searchCriteria.milestoneIds)
            ${searchCriteria.milestoneIds.operation}
            m_tracker_bug.milestoneId IN
            #repeat(${searchCriteria.milestoneIds.values} $milestoneitem "," "(" ")")
                @{milestoneitem}
            #end
        #end
        
        #totalCountExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="querySearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.assignuser)
            ${searchCriteria.assignuser.operation} m_tracker_bug.assignuser=@{searchCriteria.assignuser.value}
        #end
        
        #ifnotnull($searchCriteria.summary)
            ${searchCriteria.summary.operation} m_tracker_bug.summary LIKE '%${searchCriteria.summary.value}%'
        #end
        
        #ifnotnull($searchCriteria.detail)
            ${searchCriteria.detail.operation} m_tracker_bug.detail LIKE '%${searchCriteria.detail.value}%'
        #end
        
        #ifnotnull($searchCriteria.description)
            ${searchCriteria.description.operation} m_tracker_bug.description LIKE '%${searchCriteria.description.value}%'
        #end
        
        #ifnotnull($searchCriteria.updatedDate)
            ${searchCriteria.updatedDate.operation}
            CAST(m_tracker_bug.lastUpdatedTime AS DATE )
            ${searchCriteria.updatedDate.comparison}
            @{searchCriteria.updatedDate.value}
        #end
        
        #ifnotnull($searchCriteria.dueDate)
            ${searchCriteria.dueDate.operation}
            CAST(m_tracker_bug.duedate AS DATE )
            ${searchCriteria.dueDate.comparison}
            @{searchCriteria.dueDate.value}
        #end
        
        #ifnotnull($searchCriteria.resolvedDate)
            ${searchCriteria.resolvedDate.operation}
            CAST(m_tracker_bug.resolveddate AS DATE )
            ${searchCriteria.resolvedDate.comparison}
            @{searchCriteria.resolvedDate.value}
        #end
        
        #ifnotnull($searchCriteria.updatedDateRange)
            ${searchCriteria.updatedDateRange.operation}
            CAST(m_tracker_bug.lastUpdatedTime AS DATE ) BETWEEN @{searchCriteria.updatedDateRange.from} AND @{searchCriteria.updatedDateRange.to}
        #end
        
        #ifnotnull($searchCriteria.dueDateRange)
            ${searchCriteria.dueDateRange.operation}
            CAST(m_tracker_bug.duedate AS DATE) BETWEEN @{searchCriteria.dueDateRange.from} AND @{searchCriteria.dueDateRange.to}
        #end
        
        #ifnotnull($searchCriteria.resolvedDateRange)
            ${searchCriteria.resolvedDateRange.operation}
            CAST(m_tracker_bug.resolveddate AS DATE ) BETWEEN @{searchCriteria.resolvedDateRange.from} AND @{searchCriteria.resolvedDateRange.to}
        #end
        
        #ifnotnull($searchCriteria.environment)
            ${searchCriteria.environment.operation} m_tracker_bug.environment LIKE '%${searchCriteria.environment.value}%'
        #end
        
        #ifnotnull($searchCriteria.loguser)
            ${searchCriteria.loguser.operation} m_tracker_bug.logby = @{searchCriteria.loguser.value}
        #end
        
        #ifnotnull($searchCriteria.projectId)
            ${searchCriteria.projectId.operation} m_tracker_bug.projectid = @{searchCriteria.projectId.value}
        #end
        
        #ifnotnull($searchCriteria.affectedversionids)
            ${searchCriteria.affectedversionids.operation}
            #repeat(${searchCriteria.affectedversionids.values} $affectedversion "OR" "(" ")")
                EXISTS (SELECT 1
                FROM m_tracker_bug_related_item
                WHERE m_tracker_bug_related_item.type='AffVersion'
                    AND m_tracker_bug_related_item.typeid=@{affectedversion,jdbcType=NUMERIC}
                    AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                    LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.fixedversionids)
            ${searchCriteria.fixedversionids.operation}
            #repeat(${searchCriteria.fixedversionids.values} $fixedversion "OR" "(" ")")
                EXISTS (SELECT 1
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='FixVersion'
                        AND m_tracker_bug_related_item.typeid=@{fixedversion,jdbcType=NUMERIC}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                        LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.versionids)
            ${searchCriteria.versionids.operation}
            #repeat(${searchCriteria.versionids.values} $versionid "OR" "(" ")")
                EXISTS (SELECT 1
                FROM m_tracker_bug_related_item
                WHERE m_tracker_bug_related_item.type='AffVersion'
                    AND m_tracker_bug_related_item.typeid=@{versionid,jdbcType=NUMERIC}
                    AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                    LIMIT 1)
                  OR 
                EXISTS (SELECT 1
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='FixVersion'
                        AND m_tracker_bug_related_item.typeid=@{versionid,jdbcType=NUMERIC}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                        LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.componentids)
            ${searchCriteria.componentids.operation}
            #repeat(${searchCriteria.componentids.values} $componentid "OR" "(" ")")
                EXISTS (SELECT 1
                    FROM m_tracker_bug_related_item
                    WHERE m_tracker_bug_related_item.type='Component'
                        AND m_tracker_bug_related_item.typeid=@{componentid,jdbcType=NUMERIC}
                        AND m_tracker_bug_related_item.bugid=m_tracker_bug.id
                        LIMIT 1)
            #end
        #end
        
        #ifnotnull($searchCriteria.priorities)
            ${searchCriteria.priorities.operation}
            m_tracker_bug.priority IN
            #repeat(${searchCriteria.priorities.values} $priorityitem "," "(" ")")
                @{priorityitem}
            #end
        #end
        
        #ifnotnull($searchCriteria.statuses)
            ${searchCriteria.statuses.operation} m_tracker_bug.status IN
            #repeat(${searchCriteria.statuses.values} $status "," "(" ")")
                @{status}
            #end
        #end
        
        #ifnotnull($searchCriteria.resolutions)
            ${searchCriteria.resolutions.operation}
            m_tracker_bug.resolution IN
            #repeat(${searchCriteria.resolutions.values} $resolution "," "(" ")")
                @{resolution}
            #end
        #end
        
        #ifnotnull($searchCriteria.severities)
            ${searchCriteria.severities.operation}
            m_tracker_bug.severity IN
            #repeat(${searchCriteria.severities.values} $severity "," "(" ")")
                @{severity}
            #end
        #end
        
        #ifnotnull($searchCriteria.milestoneIds)
            ${searchCriteria.milestoneIds.operation}
            m_tracker_bug.milestoneId IN
            #repeat(${searchCriteria.milestoneIds.values} $milestoneitem "," "(" ")")
                @{milestoneitem}
            #end
        #end
        
        #selectExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="selectBug">

        <![CDATA[
          SELECT DISTINCT m_tracker_bug.id, m_tracker_bug.summary, m_tracker_bug.detail, m_tracker_bug.assignuser, m_tracker_bug.createdTime, 
                 m_tracker_bug.logby, m_tracker_bug.severity, m_tracker_bug.priority, m_tracker_bug.lastUpdatedTime,
                 m_tracker_bug.status, m_tracker_bug.duedate, m_tracker_bug.environment, m_tracker_bug.resolution,
                 m_tracker_bug.cus_int_01, m_tracker_bug.cus_int_02, m_tracker_bug.cus_int_03, m_tracker_bug.cus_int_04, 
                 m_tracker_bug.cus_int_05, m_tracker_bug.cus_int_06, m_tracker_bug.cus_int_07,
                 m_tracker_bug.cus_int_08, m_tracker_bug.cus_int_09, m_tracker_bug.cus_int_10, m_tracker_bug.cus_str_01, 
                 m_tracker_bug.cus_str_02, m_tracker_bug.cus_str_03, m_tracker_bug.cus_str_04,
                 m_tracker_bug.cus_str_05, m_tracker_bug.cus_time_01, m_tracker_bug.cus_time_02, 
                 m_tracker_bug.cus_time_03, m_tracker_bug.cus_time_04, m_tracker_bug.cus_dbl_01, 
                 m_tracker_bug.cus_dbl_02, m_tracker_bug.cus_dbl_03, m_tracker_bug.projectid, 
                 m_tracker_bug.resolveddate, m_tracker_bug.sAccountId, m_tracker_bug.description, m_tracker_bug.estimateTime,
                 m_tracker_bug.estimateRemainTime, m_tracker_bug.milestoneId, bugkey, milestone.name as milestoneName,
                 concat(assignuserTbl.firstname, ' ', LTRIM(concat(IFNULL(assignuserTbl.middlename, ''), ' ')), assignuserTbl.lastname) as assignuserFullName,
                 assignuserTbl.avatarId AS assignUserAvatarId,
                 concat(loguserTbl.firstname, ' ', LTRIM(concat(IFNULL(loguserTbl.middlename, ''), ' ')), loguserTbl.lastname) as loguserFullName,
                 loguserTbl.avatarId AS loguserAvatarId,
                 m_prj_project.name as projectname, m_prj_project.shortname AS projectShortName,
                 affectedversion.id as affectedversion_id, affectedversion.projectid as affectedversion_projectid, 
                 affectedversion.description as affectedversion_description, affectedversion.duedate as affectedversion_duedate, 
                 affectedversion.versionname as affectedversion_versionname, affectedversion.createdUser as affectedversion_createdUser, 
                 affectedversion.createdTime as affectedversion_createdTime, affectedversion.lastUpdatedTime as affectedversion_lastUpdatedTime,
                 fixedversion.id as fixedversion_id, fixedversion.projectid as fixedversion_projectid, 
                 fixedversion.description as fixedversion_description, fixedversion.duedate as fixedversion_duedate, 
                 fixedversion.versionname as fixedversion_versionname, fixedversion.createdUser as fixedversion_createdUser, 
                 fixedversion.createdTime as fixedversion_createdTime, fixedversion.lastUpdatedTime as fixedversion_lastUpdatedTime,
                 component.id as component_id, component.projectid as component_projectid, component.componentname as component_componentname, 
                 component.userlead as component_userlead, component.description as component_description, component.createdUser as component_createdUser, 
                 component.createdTime as component_createdTime, component.lastUpdatedTime as component_lastUpdatedTime
           FROM m_tracker_bug
               LEFT OUTER JOIN m_prj_project ON (m_tracker_bug.projectid = m_prj_project.id)
               LEFT OUTER JOIN s_user AS assignuserTbl ON (m_tracker_bug.assignuser=assignuserTbl.username)
               LEFT OUTER JOIN s_user AS loguserTbl ON (m_tracker_bug.logby=loguserTbl.username)
               LEFT OUTER JOIN m_tracker_bug_related_item AS relatedItem1 ON (relatedItem1.bugid = m_tracker_bug.id AND relatedItem1.type='AffVersion')
               LEFT OUTER JOIN m_tracker_version AS affectedversion ON (affectedversion.id = relatedItem1.typeid)
               LEFT OUTER JOIN m_tracker_bug_related_item AS relatedItem2 ON (relatedItem2.bugid = m_tracker_bug.id AND relatedItem2.type='FixVersion')
               LEFT OUTER JOIN m_tracker_version AS fixedversion ON (fixedversion.id = relatedItem2.typeid)
               LEFT OUTER JOIN m_tracker_bug_related_item AS relatedItem3 ON (relatedItem3.bugid = m_tracker_bug.id AND relatedItem3.type='Component')
               LEFT OUTER JOIN m_tracker_component AS component ON (component.id = relatedItem3.typeid)
               LEFT OUTER JOIN m_prj_milestone AS milestone ON (m_tracker_bug.milestoneId=milestone.id)
               
        ]]>
    </sql>

    <select id="getBugById" resultMap="SimpleBugResult"
        resultType="int" lang="velocity">

        <include refid="selectBug" />
        WHERE m_tracker_bug.id = @{bugid,jdbcType=NUMERIC}

    </select>
    
    <select id="findByProjectAndBugKey" resultMap="SimpleBugResult"
        parameterType="map" lang="velocity">

        <include refid="selectBug" />
        WHERE m_tracker_bug.sAccountId = @{sAccountId,jdbcType=NUMERIC}
            AND m_tracker_bug.bugkey = @{bugkey}
            AND m_prj_project.shortname = @{prjShortName}

    </select>

    <select id="getTotalCount" parameterType="BugSearchCriteria"
        resultType="int" lang="velocity">
        SELECT count(*) as totalCount FROM m_tracker_bug
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="queryTotalCountSearchCriteria" />
            #end
        #end
    </select>

    <select id="findPagableListByCriteria" parameterType="BugSearchCriteria"
        resultMap="SimpleBugResult" lang="velocity">

        <include refid="selectBug" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end    
        <include refid="orderStatement" />
    </select>

    <sql id="orderStatement">
        ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderByField)
            ${_parameter.searchCriteria.orderByField} ${_parameter.searchCriteria.sortDirection},
        #end
        m_tracker_bug.lastUpdatedTime DESC
    </sql>

    <select id="getStatusSummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">
        <![CDATA[
        SELECT m_tracker_bug.status AS groupid, COUNT(m_tracker_bug.status) AS value, '' as groupname
        FROM m_tracker_bug
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_bug.status
    </select>

    <select id="getPrioritySummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_tracker_bug.priority AS groupid,
            COUNT(m_tracker_bug.priority) AS value, '' as groupname
        FROM m_tracker_bug
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_bug.priority
    </select>

    <select id="getResolutionDefectsSummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_tracker_bug.resolution AS groupid,
            COUNT(m_tracker_bug.resolution) AS value, '' as groupname
        FROM
            m_tracker_bug
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_bug.resolution
    </select>

    <select id="getAssignedDefectsSummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_tracker_bug.assignuser AS groupid,
            COUNT(IFNULL(m_tracker_bug.assignuser, '')) AS value,
            s_user.avatarId AS extraValue,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) as groupname
        FROM m_tracker_bug
            LEFT OUTER JOIN s_user ON (m_tracker_bug.assignuser = s_user.username)
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_bug.assignuser
    </select>

    <select id="getReporterDefectsSummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_tracker_bug.logby AS groupid,
            COUNT(IFNULL(m_tracker_bug.logby,'')) AS value,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname) as groupname
        FROM m_tracker_bug
            LEFT OUTER JOIN s_user ON (m_tracker_bug.logby = s_user.username)
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_bug.logby
    </select>

    <select id="getComponentDefectsSummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_tracker_component.id AS groupid,
            COUNT(IFNULL(m_tracker_component.id,'')) AS value,
            m_tracker_component.componentname as groupname
        FROM m_tracker_bug
        RIGHT OUTER JOIN m_tracker_bug_related_item ON (m_tracker_bug.id = m_tracker_bug_related_item.bugid) 
        RIGHT OUTER JOIN m_tracker_component ON (m_tracker_bug_related_item.type = 'Component'
                AND m_tracker_component.id = m_tracker_bug_related_item.typeid)
        ]]>

        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_component.id

        UNION

        <![CDATA[
        SELECT 0 as groupid, COUNT(m_tracker_bug.id) as value, '' as groupname
            FROM m_tracker_bug
            WHERE (SELECT COUNT(*) FROM m_tracker_bug_related_item WHERE m_tracker_bug_related_item.type='Component' 
                AND m_tracker_bug.id=m_tracker_bug_related_item.typeid) = 0
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            <include refid="querySearchCriteria" />
        #end
    </select>

    <select id="getVersionDefectsSummary" parameterType="BugSearchCriteria"
        resultMap="com.esofthead.mycollab.common.dao.GroupItemMapper.BaseResultMap" lang="velocity">

        <![CDATA[
        SELECT m_tracker_version.id AS groupid,
            COUNT(IFNULL(m_tracker_version.id,'')) AS value,
            m_tracker_version.versionname as groupname
        FROM m_tracker_bug
        RIGHT OUTER JOIN m_tracker_related_item ON (CONCAT('bug-', m_tracker_bug.id) = m_tracker_related_item.refkey) 
        RIGHT OUTER JOIN m_tracker_version ON ((m_tracker_related_item.type = 0 || m_tracker_related_item.type =1)
                AND m_tracker_version.id = m_tracker_related_item.typeid)
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        GROUP BY m_tracker_version.id

        UNION

        <![CDATA[       
        SELECT 0 as groupid, COUNT(m_tracker_bug.id) as value, '' as groupname
            FROM m_tracker_bug
            WHERE (SELECT COUNT(*) FROM m_tracker_related_item WHERE (m_tracker_related_item.type=0 OR m_tracker_related_item.type=1) AND CONCAT('bug-', m_tracker_bug.id) = m_tracker_related_item.refkey) = 0
        ]]>
        #ifnotnull($_parameter.searchCriteria)
            <include refid="querySearchCriteria" />
        #end
    </select>

    <select id="getMaxKey" parameterType="java.lang.Integer"
        resultType="java.lang.Integer" lang="velocity">
        <![CDATA[
        SELECT MAX(bugkey) 
            FROM m_tracker_bug
            WHERE m_tracker_bug.projectid=@{projectId, jdbcType=NUMERIC}
        ]]>
    </select>

    <resultMap id="BugStatusGroupItemResult"
        type="com.esofthead.mycollab.module.tracker.domain.BugStatusGroupItem">
        <result column="groupname" jdbcType="VARCHAR" property="groupname" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="numOpen" jdbcType="INTEGER" property="numOpen" />
        <result column="numInProgress" jdbcType="INTEGER"
            property="numInProgress" />
        <result column="numVerified" jdbcType="INTEGER" property="numVerified" />
        <result column="numResolved" jdbcType="INTEGER" property="numResolved" />
        <result column="numReOpenned" jdbcType="INTEGER"
            property="numReOpenned" />
    </resultMap>

    <select id="getBugStatusGroupItemBaseComponent"
        parameterType="BugSearchCriteria" resultMap="BugStatusGroupItemResult" lang="velocity">
        <![CDATA[
        SELECT m_tracker_component.componentname AS groupname, 
            (SELECT COUNT(*) 
                FROM m_tracker_bug, m_tracker_bug_related_item
                WHERE m_tracker_bug.status="Open" 
                    AND m_tracker_bug.id = m_tracker_bug_related_item.bugid
                    AND m_tracker_bug_related_item.type = 'Component' 
                    AND m_tracker_component.id = m_tracker_bug_related_item.typeid) AS numOpen,
             (SELECT COUNT(*) 
                FROM m_tracker_bug, m_tracker_bug_related_item
                WHERE m_tracker_bug.status="InProgress" 
                    AND m_tracker_bug.id = m_tracker_bug_related_item.bugid
                    AND m_tracker_bug_related_item.type = 'Component' 
                    AND m_tracker_component.id = m_tracker_bug_related_item.typeid) AS numInProgress,
              (SELECT COUNT(*) 
                FROM m_tracker_bug, m_tracker_bug_related_item
                WHERE m_tracker_bug.status="Verified" 
                    AND m_tracker_bug.id = m_tracker_bug_related_item.bugid
                    AND m_tracker_bug_related_item.type = 'Component' 
                    AND m_tracker_component.id = m_tracker_bug_related_item.typeid) AS numVerified,
               (SELECT COUNT(*) 
                FROM m_tracker_bug, m_tracker_bug_related_item
                WHERE m_tracker_bug.status="Resolved" 
                    AND m_tracker_bug.id = m_tracker_bug_related_item.bugid
                    AND m_tracker_bug_related_item.type = 'Component' 
                    AND m_tracker_component.id = m_tracker_bug_related_item.typeid) AS numResolved,
                (SELECT COUNT(*) 
                FROM m_tracker_bug, m_tracker_bug_related_item
                WHERE m_tracker_bug.status="Reopenned" 
                    AND m_tracker_bug.id = m_tracker_bug_related_item.bugid
                    AND m_tracker_bug_related_item.type = 'Component' 
                    AND m_tracker_component.id = m_tracker_bug_related_item.typeid) AS numReOpenned                         
        FROM m_tracker_component   
        ]]>
        
    </select>
</mapper>