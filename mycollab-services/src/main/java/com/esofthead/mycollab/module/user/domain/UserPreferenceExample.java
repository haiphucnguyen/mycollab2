/**
 * This file is part of mycollab-services.
 *
 * mycollab-services is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * mycollab-services is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with mycollab-services.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.esofthead.mycollab.module.user.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@SuppressWarnings("ucd")
public class UserPreferenceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public UserPreferenceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    @SuppressWarnings("ucd")
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitIsNull() {
            addCriterion("lastModuleVisit is null");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitIsNotNull() {
            addCriterion("lastModuleVisit is not null");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitEqualTo(String value) {
            addCriterion("lastModuleVisit =", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitNotEqualTo(String value) {
            addCriterion("lastModuleVisit <>", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitGreaterThan(String value) {
            addCriterion("lastModuleVisit >", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitGreaterThanOrEqualTo(String value) {
            addCriterion("lastModuleVisit >=", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitLessThan(String value) {
            addCriterion("lastModuleVisit <", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitLessThanOrEqualTo(String value) {
            addCriterion("lastModuleVisit <=", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitLike(String value) {
            addCriterion("lastModuleVisit like", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitNotLike(String value) {
            addCriterion("lastModuleVisit not like", value, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitIn(List<String> values) {
            addCriterion("lastModuleVisit in", values, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitNotIn(List<String> values) {
            addCriterion("lastModuleVisit not in", values, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitBetween(String value1, String value2) {
            addCriterion("lastModuleVisit between", value1, value2, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastmodulevisitNotBetween(String value1, String value2) {
            addCriterion("lastModuleVisit not between", value1, value2, "lastmodulevisit");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeIsNull() {
            addCriterion("lastAccessedTime is null");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeIsNotNull() {
            addCriterion("lastAccessedTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeEqualTo(Date value) {
            addCriterion("lastAccessedTime =", value, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeNotEqualTo(Date value) {
            addCriterion("lastAccessedTime <>", value, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeGreaterThan(Date value) {
            addCriterion("lastAccessedTime >", value, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("lastAccessedTime >=", value, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeLessThan(Date value) {
            addCriterion("lastAccessedTime <", value, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeLessThanOrEqualTo(Date value) {
            addCriterion("lastAccessedTime <=", value, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeIn(List<Date> values) {
            addCriterion("lastAccessedTime in", values, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeNotIn(List<Date> values) {
            addCriterion("lastAccessedTime not in", values, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeBetween(Date value1, Date value2) {
            addCriterion("lastAccessedTime between", value1, value2, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andLastaccessedtimeNotBetween(Date value1, Date value2) {
            addCriterion("lastAccessedTime not between", value1, value2, "lastaccessedtime");
            return (Criteria) this;
        }

        public Criteria andSaccountidIsNull() {
            addCriterion("sAccountId is null");
            return (Criteria) this;
        }

        public Criteria andSaccountidIsNotNull() {
            addCriterion("sAccountId is not null");
            return (Criteria) this;
        }

        public Criteria andSaccountidEqualTo(Integer value) {
            addCriterion("sAccountId =", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotEqualTo(Integer value) {
            addCriterion("sAccountId <>", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidGreaterThan(Integer value) {
            addCriterion("sAccountId >", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidGreaterThanOrEqualTo(Integer value) {
            addCriterion("sAccountId >=", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidLessThan(Integer value) {
            addCriterion("sAccountId <", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidLessThanOrEqualTo(Integer value) {
            addCriterion("sAccountId <=", value, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidIn(List<Integer> values) {
            addCriterion("sAccountId in", values, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotIn(List<Integer> values) {
            addCriterion("sAccountId not in", values, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidBetween(Integer value1, Integer value2) {
            addCriterion("sAccountId between", value1, value2, "saccountid");
            return (Criteria) this;
        }

        public Criteria andSaccountidNotBetween(Integer value1, Integer value2) {
            addCriterion("sAccountId not between", value1, value2, "saccountid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_user_preference
     *
     * @mbggenerated do_not_delete_during_merge Sun Jul 20 11:11:55 ICT 2014
     */
    @SuppressWarnings("ucd")
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_user_preference
     *
     * @mbggenerated Sun Jul 20 11:11:55 ICT 2014
     */
    @SuppressWarnings("ucd")
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}