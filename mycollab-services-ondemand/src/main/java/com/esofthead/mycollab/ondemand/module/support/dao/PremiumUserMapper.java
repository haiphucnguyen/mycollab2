package com.esofthead.mycollab.ondemand.module.support.dao;

import com.esofthead.mycollab.core.persistence.ICrudGenericDAO;
import com.esofthead.mycollab.ondemand.module.support.domain.PremiumUser;
import com.esofthead.mycollab.ondemand.module.support.domain.PremiumUserExample;
import java.util.List;

import org.apache.ibatis.annotations.Param;

@SuppressWarnings({ "ucd", "rawtypes" })
public interface PremiumUserMapper extends ICrudGenericDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int countByExample(PremiumUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int deleteByExample(PremiumUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int insert(PremiumUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int insertSelective(PremiumUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    List<PremiumUser> selectByExample(PremiumUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    PremiumUser selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int updateByExampleSelective(@Param("record") PremiumUser record, @Param("example") PremiumUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int updateByExample(@Param("record") PremiumUser record, @Param("example") PremiumUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int updateByPrimaryKeySelective(PremiumUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    int updateByPrimaryKey(PremiumUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    Integer insertAndReturnKey(PremiumUser value);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    void removeKeysWithSession(List primaryKeys);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_premium_users
     *
     * @mbggenerated Thu Jan 28 16:37:53 ICT 2016
     */
    void massUpdateWithSession(@Param("record") PremiumUser record, @Param("primaryKeys") List primaryKeys);
}