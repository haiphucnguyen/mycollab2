<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.vaadin.addons</groupId>
	<artifactId>customfield</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<properties>
		<vaadin.addon.name>CustomField</vaadin.addon.name>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<description>CustomField add-on provides a similarly named Vaadin Field implementation and FieldWrapper component that can be used in similar purposes.</description>
	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<scope>test</scope>
			<version>8.1.1.v20120215</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>2.19.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This creates a zip file of jar and sources jar. Makes sources available 
				to maven users automatically?! We could also use this to package required 
				dependecies for those poor developer souls that still dont know how to use 
				a build system that supports transient dependencies... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<!-- Implementation-Title and Implementation-Version come from the 
									POM by default -->
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<!-- Package format version - do not change -->
								<Vaadin-Package-Version>1</Vaadin-Package-Version>

								<!-- Add-on specific fields to update -->

								<!-- Implementation-Title and Implementation-Version come from the 
									POM by default -->
								<Implementation-Title>${vaadin.addon.name}</Implementation-Title>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>
<distributionManagement>
        <!-- Publish versioned releases here -->
        <repository>
            <id>releaseNexus</id>
            <name>My releases</name>
            <url>http://build2.netconference.com:8080/nexus/content/repositories/releases</url>
        </repository>

        <!-- Publish snapshots here -->
        <snapshotRepository>
            <id>snapshotNexus</id>
            <name>My snapshots</name>
            <url>http://build2.netconference.com:8080/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>